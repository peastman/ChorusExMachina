use chorus::VoicePart;
use chorus::phonemes::Phonemes;
use chorus::voice::Voice;

use rodio::{OutputStream, Source};
use midir::MidiInput;
use std::collections::BTreeMap;
use std::sync::{Arc, Mutex};
use std::time::Duration;

use eframe::egui::{self, CentralPanel, epaint};
use eframe::{App, NativeOptions};

struct Player {
    voices: Vec<Voice>,
    voice_part: VoicePart,
    voice_count: usize,
    shape_map: BTreeMap<&'static str, Vec<f32>>,
    weights: BTreeMap<&'static str, f32>,
    shape: Vec<f32>,
    step: i64,
    current_note: u8,
    note_playing: bool
}

impl Player {
    fn new() -> Self {
        let voice_part = VoicePart::Bass;
        let mut result = Self {
            voices: vec![Voice::new(voice_part, 48000)],
            voice_part: voice_part,
            voice_count: 1,
            shape_map: BTreeMap::new(),
            weights: BTreeMap::new(),
            shape: vec![],
            step: 0,
            current_note: 0,
            note_playing: false
        };
        result.rebuild();
        for key in result.shape_map.keys() {
            result.weights.insert(key, 0.0);
        }
        result
    }

    fn update_shape(&mut self) {
        let total_weight: f32 = self.weights.values().sum();
        let vocal_length = self.shape_map["set1-2"].len();
        let mut shape = vec![0.0; vocal_length];
        for (key, weight) in &self.weights {
            if *weight > 0.0 {
                let s = &self.shape_map[key];
                for i in 0..s.len() {
                    shape[i] += (weight/total_weight)*s[i];
                }
            }
        }
        for voice in &mut self.voices {
            voice.set_vocal_shape(&shape, 0.0);
        }
        self.shape = shape;
    }

    fn rebuild(&mut self) {
        self.voices.clear();
        for i in 0..self.voice_count {
            self.voices.push(Voice::new(self.voice_part, 48000));
        }
        self.shape_map.clear();
        match self.voice_part {
            VoicePart::Soprano => {
                self.shape_map.insert("set1-2", vec![0.801, 0.74, 0.615, 0.504, 0.414, 0.436, 2.02, 3.18, 3.52, 3.3, 2.82, 2.54, 3.43, 4.6, 5.65, 6.67, 7.57, 8.44, 9.39, 9.42, 7.89, 7.25, 5.89, 4.35, 2.97, 1.8, 1.07, 0.898, 0.929, 0.971, 1.1, 1.12, 1.14, 0.991, 0.95, 1.08, 1.23, 1.92, 1.9, 0.819, 0.432, 0.407]);
                self.shape_map.insert("set1-6", vec![0.801, 0.747, 0.632, 0.526, 0.438, 0.369, 1.2, 3.17, 3.87, 3.5, 2.4, 1.56, 1.61, 1.82, 2.0, 2.31, 2.75, 3.24, 3.83, 4.59, 4.97, 3.9, 3.53, 3.32, 3.09, 3.07, 3.33, 3.54, 3.95, 4.69, 5.27, 5.41, 5.71, 5.69, 5.35, 4.75, 4.22, 3.68, 2.96, 2.47, 1.83, 2.52]);
                self.shape_map.insert("set1-9", vec![0.801, 0.745, 0.626, 0.517, 0.429, 0.369, 1.49, 3.3, 3.82, 3.45, 2.62, 1.98, 2.07, 2.63, 2.99, 3.33, 3.86, 4.69, 5.78, 7.04, 7.57, 6.55, 6.18, 5.61, 4.99, 4.6, 4.15, 3.87, 4.26, 4.79, 4.98, 4.94, 4.99, 4.75, 4.16, 3.66, 3.19, 2.66, 2.6, 1.57, 1.06, 0.912]);
                self.shape_map.insert("set1-E", vec![0.801, 0.753, 0.64, 0.535, 0.447, 0.377, 1.14, 3.47, 4.57, 4.64, 3.83, 3.16, 2.86, 3.3, 3.82, 4.17, 4.61, 5.3, 6.47, 7.54, 6.91, 6.66, 6.23, 5.54, 4.84, 4.02, 3.2, 2.72, 2.74, 2.88, 2.88, 2.79, 2.84, 2.77, 2.49, 2.22, 2.1, 1.91, 1.66, 1.73, 1.85, 2.37]);
                self.shape_map.insert("set1-E-long", vec![0.801, 0.756, 0.646, 0.542, 0.455, 0.383, 1.0, 3.49, 4.99, 5.09, 4.11, 3.14, 2.72, 3.13, 3.25, 3.43, 3.78, 4.42, 5.16, 4.72, 4.21, 4.32, 3.9, 3.44, 3.0, 2.49, 1.92, 1.61, 1.69, 1.82, 1.81, 1.81, 1.86, 1.87, 1.71, 1.64, 1.72, 1.76, 1.79, 2.01, 1.88, 2.26]);
                self.shape_map.insert("set1-I", vec![0.801, 0.755, 0.637, 0.526, 0.439, 0.414, 2.16, 4.79, 5.54, 5.76, 5.35, 5.08, 5.33, 6.38, 7.26, 7.87, 8.44, 8.83, 9.47, 10.3, 11.6, 12.3, 10.8, 9.95, 8.71, 6.87, 4.83, 3.01, 2.11, 1.95, 1.94, 1.85, 1.89, 1.82, 1.67, 1.33, 1.08, 0.893, 0.753, 0.617, 1.36, 1.84]);
                self.shape_map.insert("set1-O", vec![0.801, 0.744, 0.624, 0.514, 0.426, 0.39, 1.67, 3.4, 3.9, 3.11, 2.09, 1.47, 1.68, 1.75, 1.77, 1.57, 1.3, 1.18, 1.35, 1.74, 1.82, 1.09, 1.22, 1.32, 1.57, 2.1, 3.04, 4.07, 5.46, 6.84, 7.87, 8.3, 8.84, 8.83, 8.18, 7.3, 6.13, 4.81, 3.23, 1.81, 1.11, 0.876]);
                self.shape_map.insert("set1-U", vec![0.801, 0.74, 0.611, 0.499, 0.408, 0.521, 2.4, 3.4, 3.83, 3.29, 2.78, 2.53, 3.3, 3.94, 4.17, 3.74, 3.1, 2.64, 2.58, 2.63, 1.85, 1.02, 0.858, 0.558, 0.445, 0.568, 0.847, 1.42, 2.54, 3.62, 4.24, 4.59, 4.82, 4.65, 4.7, 4.88, 5.71, 5.27, 2.33, 1.09, 0.466, 0.391]);
                self.shape_map.insert("set1-Y", vec![0.801, 0.747, 0.618, 0.503, 0.412, 0.734, 3.38, 4.78, 5.31, 4.75, 4.28, 4.03, 4.67, 5.09, 5.32, 5.46, 5.65, 5.92, 6.46, 7.36, 8.58, 9.02, 7.83, 7.73, 7.04, 6.41, 5.5, 4.74, 4.96, 5.4, 5.52, 5.45, 5.36, 4.85, 4.45, 3.85, 3.14, 2.56, 1.99, 1.24, 0.693, 0.728]);
                self.shape_map.insert("set1-a", vec![0.801, 0.75, 0.638, 0.535, 0.448, 0.375, 0.895, 2.86, 4.0, 3.21, 1.54, 0.683, 0.522, 0.626, 0.874, 1.22, 1.79, 2.51, 3.45, 3.73, 2.8, 2.93, 2.81, 2.72, 2.92, 3.4, 3.78, 4.23, 4.99, 5.59, 5.78, 5.72, 5.81, 5.66, 5.23, 4.97, 4.45, 3.76, 3.2, 1.89, 2.0, 2.31]);
                self.shape_map.insert("set1-&", vec![0.801, 0.753, 0.633, 0.521, 0.433, 0.445, 2.42, 4.86, 5.7, 5.45, 4.88, 4.29, 4.4, 4.8, 4.91, 4.87, 4.86, 4.93, 5.25, 5.91, 6.88, 7.12, 5.8, 5.45, 4.8, 3.9, 3.28, 2.6, 2.19, 2.39, 2.87, 3.13, 3.43, 3.51, 3.34, 2.82, 2.32, 1.82, 1.29, 0.799, 1.33, 1.99]);
                self.shape_map.insert("set1-e", vec![0.801, 0.758, 0.647, 0.542, 0.455, 0.385, 1.23, 4.13, 5.14, 5.88, 5.54, 5.04, 4.87, 5.2, 6.01, 6.48, 6.85, 7.23, 7.56, 6.7, 5.55, 5.06, 4.11, 3.23, 2.59, 2.0, 1.4, 1.03, 0.856, 0.759, 0.664, 0.673, 0.701, 0.704, 0.558, 0.454, 0.528, 0.757, 0.951, 1.23, 1.16, 1.99]);
                self.shape_map.insert("set1-i", vec![0.801, 0.755, 0.633, 0.52, 0.433, 0.524, 3.23, 5.95, 7.01, 6.72, 6.4, 6.24, 6.96, 8.39, 9.1, 9.86, 10.4, 10.8, 11.2, 11.9, 12.6, 12.4, 10.3, 9.23, 7.59, 5.67, 3.64, 1.95, 1.05, 0.662, 0.481, 0.423, 0.46, 0.443, 0.392, 0.266, 0.296, 0.48, 0.672, 0.869, 0.929, 2.01]);
                self.shape_map.insert("set1-o", vec![0.801, 0.747, 0.619, 0.504, 0.413, 0.66, 3.21, 4.87, 5.08, 4.38, 3.81, 3.54, 4.07, 4.07, 3.58, 2.94, 2.28, 1.84, 1.79, 1.85, 1.27, 0.582, 0.667, 0.529, 0.534, 0.815, 1.29, 1.96, 3.29, 5.07, 6.74, 6.96, 9.52, 14.1, 15.3, 13.1, 9.64, 5.11, 2.77, 1.25, 0.465, 0.336]);
                self.shape_map.insert("set1-u", vec![0.801, 0.748, 0.613, 0.494, 0.404, 1.51, 5.18, 6.49, 6.79, 6.36, 6.03, 6.2, 7.01, 7.32, 7.27, 6.6, 5.55, 4.69, 4.31, 4.37, 3.87, 2.32, 1.83, 1.17, 0.68, 0.469, 0.427, 0.672, 1.48, 2.43, 3.2, 3.72, 4.09, 4.01, 5.06, 8.75, 6.87, 2.62, 1.37, 0.619, 0.319, 0.3]);
                self.shape_map.insert("set1-y", vec![0.801, 0.75, 0.628, 0.516, 0.427, 0.453, 2.31, 4.33, 5.07, 4.78, 4.32, 4.0, 4.39, 5.51, 6.26, 6.94, 7.6, 8.24, 8.94, 8.52, 7.44, 7.15, 5.83, 4.4, 2.99, 1.64, 0.835, 0.563, 0.504, 0.558, 0.72, 0.766, 0.796, 0.765, 0.908, 1.16, 1.35, 1.6, 1.38, 0.768, 0.336, 0.291]);
                self.shape_map.insert("set2-3", vec![0.41, 0.404, 0.395, 0.334, 0.238, 0.511, 1.23, 1.55, 1.35, 1.19, 1.02, 0.886, 1.05, 1.34, 1.57, 1.78, 2.02, 2.18, 2.45, 2.86, 3.07, 3.56, 4.21, 4.42, 4.37, 4.02, 3.63, 3.24, 2.89, 2.55, 2.04, 1.36, 0.824, 0.522, 0.61, 1.25, 2.38, 3.2, 3.37, 3.04, 2.34, 1.45]);
                self.shape_map.insert("set2-A", vec![0.45, 0.328, 0.236, 0.245, 0.28, 0.319, 0.43, 0.839, 1.07, 0.904, 0.648, 0.425, 0.321, 0.302, 0.327, 0.381, 0.392, 0.456, 0.712, 1.29, 1.67, 2.06, 2.83, 3.46, 3.84, 3.95, 4.13, 4.66, 5.38, 5.92, 6.41, 6.51, 6.5, 6.33, 5.94, 5.32, 4.59, 4.0, 3.92, 3.83, 3.84, 3.97]);
                self.shape_map.insert("set2-E", vec![0.21, 0.174, 0.15, 0.153, 0.11, 0.363, 0.883, 1.2, 1.19, 0.985, 0.804, 0.828, 1.22, 1.84, 2.42, 2.98, 3.56, 3.94, 4.23, 4.28, 4.26, 4.36, 3.9, 3.33, 2.98, 2.67, 2.46, 2.31, 2.07, 1.75, 1.52, 1.41, 1.54, 1.81, 2.14, 2.46, 2.56, 2.27, 2.14, 2.28, 2.1, 1.55]);
                self.shape_map.insert("set2-I", vec![0.2, 0.19, 0.179, 0.184, 0.143, 0.604, 1.4, 1.69, 1.45, 1.08, 1.05, 1.85, 2.86, 3.31, 3.91, 4.34, 4.6, 5.17, 5.53, 5.61, 5.51, 4.96, 4.2, 3.65, 3.11, 2.7, 2.43, 2.02, 1.76, 1.45, 1.05, 0.83, 0.927, 1.2, 1.57, 1.85, 1.81, 1.8, 1.83, 1.6, 1.28, 1.04]);
                self.shape_map.insert("set2-N", vec![0.51, 0.501, 0.463, 0.386, 0.435, 0.631, 0.81, 1.02, 1.26, 1.19, 0.907, 0.778, 0.875, 0.883, 0.853, 1.08, 1.15, 1.04, 1.23, 1.28, 1.04, 0.802, 0.675, 0.663, 0.586, 0.302, 0.0553, 0.0, 0.0, 0.0, 0.0, 0.0, 0.597, 2.52, 5.04, 7.26, 8.61, 8.01, 6.05, 3.92, 2.42, 1.5]);
                self.shape_map.insert("set2-O", vec![0.61, 0.446, 0.232, 0.14, 0.106, 0.203, 0.364, 0.878, 1.32, 1.19, 0.806, 0.547, 0.558, 0.679, 0.616, 0.51, 0.572, 0.666, 0.788, 0.982, 1.06, 0.954, 1.22, 2.3, 3.27, 3.43, 3.55, 4.14, 4.98, 5.47, 5.77, 6.25, 6.94, 6.85, 6.37, 5.79, 5.01, 3.63, 2.26, 1.5, 1.11, 0.857]);
                self.shape_map.insert("set2-U", vec![0.32, 0.365, 0.401, 0.432, 0.605, 1.23, 1.96, 2.08, 1.68, 1.28, 1.17, 1.26, 1.31, 1.19, 1.11, 0.989, 1.04, 1.17, 1.2, 1.09, 0.899, 1.23, 1.46, 1.54, 1.8, 2.04, 2.35, 2.83, 3.28, 3.79, 4.33, 4.84, 5.49, 5.75, 5.54, 5.03, 4.14, 2.65, 1.49, 0.863, 0.379, 0.16]);
                self.shape_map.insert("set2-V", vec![0.33, 0.31, 0.255, 0.19, 0.181, 0.282, 0.467, 0.861, 1.17, 1.12, 0.913, 0.767, 0.786, 0.864, 0.872, 1.05, 1.3, 1.39, 1.52, 1.57, 1.69, 1.97, 2.23, 2.57, 2.96, 3.29, 3.57, 3.94, 4.49, 4.86, 4.99, 5.12, 5.62, 5.8, 5.69, 5.35, 4.85, 3.96, 2.98, 2.28, 1.79, 1.31]);
                self.shape_map.insert("set2-{", vec![0.22, 0.246, 0.266, 0.215, 0.149, 0.174, 0.533, 1.19, 1.46, 1.2, 0.86, 1.04, 2.0, 2.57, 2.48, 2.64, 3.39, 4.24, 4.98, 5.51, 5.62, 5.81, 5.66, 5.03, 4.61, 4.55, 4.38, 4.13, 3.94, 3.83, 3.91, 3.9, 4.01, 4.3, 4.59, 4.79, 4.7, 4.33, 4.08, 3.96, 3.82, 3.38]);
                self.shape_map.insert("set2-i", vec![0.33, 0.323, 0.338, 0.359, 0.522, 0.604, 1.5, 2.86, 2.98, 2.64, 3.01, 3.68, 4.13, 4.7, 5.4, 5.74, 6.16, 6.39, 6.18, 6.03, 5.7, 4.96, 3.73, 2.7, 2.17, 1.69, 1.12, 0.611, 0.409, 0.254, 0.12, 0.133, 0.21, 0.251, 0.318, 0.338, 0.328, 0.497, 1.05, 1.64, 1.75, 1.47]);
                self.shape_map.insert("set2-k", vec![0.34, 0.357, 0.451, 0.709, 1.12, 1.34, 1.24, 1.01, 0.831, 0.988, 1.41, 1.69, 1.97, 2.17, 2.06, 2.01, 1.9, 1.83, 1.83, 1.43, 1.3, 1.57, 1.37, 0.693, 0.156, 0.046, 0.066, 0.0908, 0.11, 0.0765, 0.15, 0.571, 1.39, 2.14, 2.41, 2.45, 3.13, 3.62, 2.9, 2.27, 1.99, 1.51]);
                self.shape_map.insert("set2-l", vec![0.55, 0.613, 0.813, 1.61, 2.77, 3.46, 3.5, 3.34, 3.09, 2.93, 3.32, 3.74, 3.88, 3.39, 3.0, 3.04, 3.15, 3.1, 3.21, 3.32, 3.44, 3.66, 3.66, 3.67, 3.72, 3.83, 4.28, 4.82, 5.47, 6.12, 6.58, 6.63, 6.9, 6.85, 5.92, 4.41, 2.62, 1.06, 1.69, 3.52, 4.06, 3.44]);
                self.shape_map.insert("set2-m", vec![0.57, 0.575, 0.4, 0.545, 1.66, 2.82, 3.09, 3.12, 3.63, 4.02, 3.84, 3.51, 3.45, 3.65, 3.69, 3.52, 3.69, 3.69, 3.85, 4.51, 4.23, 3.73, 3.52, 2.92, 2.71, 2.5, 2.14, 2.16, 2.45, 2.72, 3.1, 3.61, 4.33, 4.74, 4.58, 4.11, 3.49, 2.35, 1.03, 0.22, 0.0116, 0.0]);
                self.shape_map.insert("set2-n", vec![0.26, 0.254, 0.209, 0.193, 0.199, 0.407, 1.07, 1.55, 1.4, 1.02, 0.832, 1.02, 1.62, 2.26, 2.55, 2.69, 3.0, 3.34, 3.79, 3.81, 3.22, 2.83, 2.0, 1.38, 1.55, 1.76, 1.73, 1.47, 0.996, 0.5, 0.238, 0.205, 0.16, 0.045, 0.0, 0.0, 0.0, 0.0, 0.61, 1.34, 1.41, 1.18]);
                self.shape_map.insert("set2-o", vec![0.18, 0.18, 0.21, 0.287, 0.558, 1.17, 1.52, 1.26, 0.969, 1.34, 2.32, 2.58, 2.3, 2.15, 2.11, 2.08, 1.96, 1.9, 1.94, 1.63, 1.61, 2.01, 1.82, 1.26, 0.797, 0.57, 0.511, 0.716, 1.17, 1.69, 2.39, 3.07, 3.83, 4.65, 5.92, 7.03, 6.31, 4.09, 2.26, 1.1, 0.504, 0.227]);
                self.shape_map.insert("set2-p", vec![0.31, 0.361, 0.43, 0.64, 1.12, 1.63, 1.74, 1.53, 1.27, 1.27, 1.96, 2.51, 2.58, 2.79, 2.99, 2.71, 2.62, 2.9, 3.13, 3.3, 3.41, 3.43, 3.25, 3.53, 3.73, 3.36, 2.88, 2.31, 1.79, 1.52, 1.6, 1.78, 1.95, 2.09, 2.27, 2.42, 2.47, 2.38, 2.04, 1.37, 0.812, 0.308]);
                self.shape_map.insert("set2-t", vec![0.38, 0.451, 0.488, 0.823, 1.31, 1.54, 1.41, 1.12, 0.96, 0.935, 1.14, 1.72, 2.41, 2.72, 3.12, 3.55, 4.02, 4.81, 5.49, 5.92, 6.4, 6.54, 6.02, 5.5, 4.91, 4.24, 3.68, 3.35, 2.92, 2.36, 1.85, 1.46, 1.21, 0.894, 0.505, 0.151, 0.0143, 0.0491, 0.13, 0.663, 1.27, 1.24]);
                self.shape_map.insert("set2-u", vec![0.4, 0.394, 0.343, 0.401, 0.737, 1.7, 2.69, 2.79, 2.4, 2.81, 4.65, 5.85, 5.96, 5.79, 5.61, 5.44, 5.04, 4.67, 4.63, 4.77, 4.26, 3.41, 3.05, 2.41, 1.33, 0.51, 0.254, 0.264, 0.33, 0.507, 0.708, 0.833, 1.46, 2.21, 2.71, 3.78, 4.89, 4.04, 2.21, 1.04, 0.56, 0.517]);
                self.shape_map.insert("set3-A", vec![0.2, 0.318, 0.418, 0.649, 0.987, 1.39, 1.3, 0.829, 0.475, 0.378, 0.62, 1.1, 1.29, 1.44, 1.53, 1.54, 1.53, 1.75, 2.2, 2.68, 3.1, 3.4, 3.79, 3.99, 4.22, 4.49, 4.76, 4.73, 4.82, 5.03, 5.25, 5.3, 4.93, 4.2, 3.54, 3.0, 2.57, 2.02, 1.67, 1.36, 1.3, 1.68]);
                self.shape_map.insert("set3-Act", vec![0.56, 0.41, 0.253, 0.207, 0.267, 0.435, 0.646, 0.65, 0.377, 0.266, 0.257, 0.313, 0.462, 0.741, 1.31, 1.54, 1.31, 1.35, 1.69, 2.12, 2.41, 2.78, 3.24, 3.84, 4.47, 5.05, 5.5, 5.59, 5.45, 5.46, 5.19, 4.73, 4.48, 4.24, 4.05, 3.92, 3.67, 3.18, 2.78, 2.58, 2.56, 2.48]);
                self.shape_map.insert("set3-E", vec![0.18, 0.169, 0.297, 0.498, 0.752, 0.722, 0.58, 0.524, 0.525, 0.492, 0.815, 1.08, 1.38, 1.56, 1.72, 1.69, 1.59, 1.67, 2.09, 2.26, 2.29, 2.08, 1.89, 1.83, 1.8, 1.78, 1.72, 1.7, 1.74, 1.9, 1.79, 1.52, 1.37, 1.29, 1.53, 1.66, 1.69, 1.53, 1.56, 1.68, 1.67, 1.53]);
                self.shape_map.insert("set3-I", vec![0.21, 0.179, 0.253, 0.374, 0.525, 0.684, 0.789, 0.813, 0.901, 0.973, 1.0, 1.26, 1.69, 1.98, 2.1, 2.03, 1.69, 1.92, 2.34, 2.67, 2.76, 2.58, 2.3, 2.05, 1.86, 1.74, 1.69, 1.63, 1.55, 1.42, 1.28, 1.19, 1.12, 1.21, 1.42, 1.57, 1.37, 0.912, 0.941, 0.998, 1.04, 1.03]);
                self.shape_map.insert("set3-O", vec![0.82, 0.989, 1.04, 0.917, 0.718, 0.544, 0.451, 0.425, 0.38, 0.453, 0.68, 0.895, 1.03, 0.987, 0.897, 0.667, 0.787, 1.56, 2.56, 3.35, 3.7, 4.28, 5.23, 5.92, 6.48, 6.98, 7.42, 7.55, 7.75, 7.88, 8.06, 8.13, 8.43, 8.43, 8.32, 8.57, 7.66, 5.41, 3.49, 2.3, 1.76, 1.44]);
                self.shape_map.insert("set3-U", vec![0.07, 0.0871, 0.0871, 0.0702, 0.0888, 0.179, 0.354, 0.604, 0.624, 0.436, 0.273, 0.212, 0.308, 0.572, 1.03, 1.24, 0.828, 0.514, 0.595, 0.998, 1.39, 1.57, 1.54, 1.72, 2.12, 2.52, 2.77, 2.79, 2.89, 3.05, 3.02, 2.78, 2.6, 2.45, 2.44, 2.33, 2.38, 2.18, 1.75, 1.31, 1.04, 0.922]);
                self.shape_map.insert("set3-V", vec![0.18, 0.241, 0.369, 0.581, 0.732, 0.693, 0.41, 0.406, 0.377, 0.367, 0.41, 0.569, 0.823, 0.884, 0.743, 0.432, 0.331, 0.582, 0.884, 1.15, 1.35, 1.59, 1.91, 2.31, 2.71, 3.08, 3.4, 3.42, 3.28, 3.02, 2.67, 2.25, 2.11, 2.06, 2.01, 1.89, 1.58, 1.29, 1.45, 1.54, 1.53, 1.39]);
                self.shape_map.insert("set3-{", vec![0.26, 0.23, 0.363, 0.548, 0.989, 1.16, 1.18, 1.11, 1.09, 1.15, 1.25, 1.56, 1.91, 2.15, 2.28, 2.53, 2.97, 3.45, 4.13, 4.33, 4.5, 4.59, 4.44, 4.4, 4.41, 4.89, 4.97, 4.9, 4.77, 4.38, 3.92, 3.34, 3.01, 3.18, 3.41, 3.48, 3.26, 3.12, 3.32, 3.43, 3.25, 3.0]);
                self.shape_map.insert("set3-i", vec![0.36, 0.44, 0.636, 0.844, 1.09, 1.72, 2.88, 3.7, 3.18, 2.92, 3.19, 3.74, 4.52, 5.01, 5.21, 4.79, 4.12, 3.57, 3.29, 3.25, 3.32, 3.11, 2.34, 1.65, 1.02, 0.553, 0.289, 0.206, 0.201, 0.262, 0.369, 0.52, 0.636, 0.641, 0.632, 0.876, 0.889, 0.936, 1.12, 1.3, 1.37, 1.33]);
                self.shape_map.insert("set3-ict", vec![0.5, 0.44, 0.39, 0.423, 0.712, 1.24, 1.81, 2.0, 1.95, 2.06, 2.43, 3.05, 3.88, 4.35, 4.14, 3.48, 2.93, 2.58, 2.44, 2.34, 2.05, 1.45, 0.903, 0.578, 0.303, 0.119, 0.0504, 0.059, 0.0733, 0.115, 0.192, 0.26, 0.329, 0.395, 0.486, 0.625, 0.893, 1.27, 1.68, 1.9, 1.84, 1.62]);
                self.shape_map.insert("set3-o", vec![0.17, 0.179, 0.451, 0.665, 0.698, 0.615, 0.536, 0.461, 0.536, 0.632, 0.772, 0.962, 1.13, 1.01, 0.629, 0.541, 1.06, 1.88, 2.52, 2.74, 2.71, 3.08, 3.46, 3.76, 4.52, 5.43, 6.11, 6.17, 6.03, 5.61, 5.44, 5.36, 5.4, 5.09, 4.59, 3.7, 2.71, 1.89, 1.43, 1.29, 1.31, 1.23]);
                self.shape_map.insert("set3-u", vec![0.22, 0.359, 0.628, 0.829, 1.01, 1.72, 2.57, 2.74, 2.2, 1.96, 2.16, 2.23, 2.56, 2.94, 3.06, 2.97, 2.6, 1.94, 1.34, 1.19, 1.59, 1.95, 1.68, 1.39, 1.16, 1.25, 1.56, 1.91, 2.31, 2.7, 2.98, 3.08, 3.11, 3.25, 3.51, 3.45, 3.13, 2.56, 1.85, 1.07, 0.532, 0.254]);
            }
            VoicePart::Alto => {
                self.shape_map.insert("set1-2", vec![0.801, 0.742, 0.626, 0.521, 0.433, 0.36, 1.19, 3.02, 3.16, 3.64, 3.08, 2.72, 2.58, 3.66, 4.66, 5.65, 6.62, 7.45, 8.24, 9.16, 9.61, 8.44, 7.55, 6.63, 5.27, 3.88, 2.61, 1.6, 1.04, 0.894, 0.929, 0.961, 1.08, 1.12, 1.17, 1.04, 0.952, 0.984, 1.15, 1.37, 2.18, 1.62, 0.675, 0.422, 0.408]);
                self.shape_map.insert("set1-6", vec![0.801, 0.749, 0.642, 0.543, 0.456, 0.384, 0.598, 2.39, 3.61, 3.98, 3.07, 2.11, 1.48, 1.67, 1.83, 2.0, 2.28, 2.69, 3.14, 3.66, 4.31, 4.96, 4.5, 3.53, 3.49, 3.22, 3.06, 3.09, 3.35, 3.55, 3.93, 4.63, 5.21, 5.4, 5.63, 5.73, 5.55, 5.01, 4.55, 3.97, 3.46, 2.86, 2.3, 1.86, 2.54]);
                self.shape_map.insert("set1-9", vec![0.801, 0.746, 0.637, 0.535, 0.447, 0.374, 0.78, 2.69, 3.54, 3.9, 3.1, 2.43, 1.9, 2.17, 2.65, 2.99, 3.3, 3.76, 4.51, 5.47, 6.61, 7.56, 7.05, 6.26, 6.0, 5.37, 4.86, 4.51, 4.08, 3.87, 4.25, 4.76, 4.97, 4.96, 5.0, 4.88, 4.4, 3.9, 3.42, 2.97, 2.6, 2.43, 1.44, 1.04, 0.911]);
                self.shape_map.insert("set1-E", vec![0.801, 0.754, 0.65, 0.552, 0.466, 0.395, 0.558, 2.47, 4.14, 4.83, 4.34, 3.63, 3.05, 2.87, 3.36, 3.82, 4.15, 4.54, 5.13, 6.09, 7.29, 7.35, 6.59, 6.51, 5.95, 5.31, 4.64, 3.83, 3.11, 2.7, 2.73, 2.87, 2.89, 2.8, 2.84, 2.79, 2.63, 2.32, 2.15, 2.04, 1.82, 1.65, 1.76, 1.87, 2.39]);
                self.shape_map.insert("set1-E-long", vec![0.801, 0.758, 0.656, 0.559, 0.473, 0.405, 0.496, 2.35, 4.41, 5.27, 4.73, 3.84, 2.98, 2.73, 3.16, 3.25, 3.41, 3.72, 4.26, 5.01, 5.06, 4.2, 4.32, 4.15, 3.71, 3.28, 2.88, 2.38, 1.85, 1.61, 1.68, 1.82, 1.81, 1.8, 1.86, 1.87, 1.79, 1.64, 1.66, 1.74, 1.75, 1.85, 2.02, 1.88, 2.28]);
                self.shape_map.insert("set1-I", vec![0.801, 0.756, 0.648, 0.544, 0.456, 0.386, 1.12, 3.91, 5.12, 5.86, 5.59, 5.25, 5.1, 5.41, 6.49, 7.26, 7.83, 8.37, 8.72, 9.28, 9.96, 11.0, 12.2, 11.7, 10.3, 9.63, 8.24, 6.48, 4.58, 2.93, 2.11, 1.95, 1.94, 1.87, 1.87, 1.86, 1.75, 1.5, 1.2, 0.989, 0.864, 0.694, 0.696, 1.39, 1.88]);
                self.shape_map.insert("set1-O", vec![0.801, 0.746, 0.635, 0.532, 0.444, 0.371, 0.899, 2.85, 3.69, 3.78, 2.71, 1.84, 1.46, 1.71, 1.75, 1.77, 1.58, 1.33, 1.18, 1.26, 1.62, 1.92, 1.37, 1.08, 1.26, 1.37, 1.66, 2.26, 3.17, 4.13, 5.45, 6.74, 7.73, 8.23, 8.73, 8.93, 8.42, 7.83, 6.74, 5.54, 4.58, 2.68, 1.7, 1.04, 0.876]);
                self.shape_map.insert("set1-U", vec![0.801, 0.742, 0.623, 0.517, 0.427, 0.369, 1.51, 3.29, 3.58, 3.68, 3.07, 2.65, 2.6, 3.44, 3.98, 4.17, 3.77, 3.18, 2.69, 2.55, 2.63, 2.37, 1.18, 0.98, 0.728, 0.494, 0.448, 0.612, 0.886, 1.47, 2.52, 3.55, 4.18, 4.55, 4.79, 4.71, 4.6, 4.81, 4.94, 6.47, 3.93, 2.01, 0.909, 0.446, 0.391]);
                self.shape_map.insert("set1-Y", vec![0.801, 0.749, 0.63, 0.521, 0.431, 0.435, 2.23, 4.45, 5.17, 5.07, 4.58, 4.15, 4.12, 4.75, 5.11, 5.31, 5.44, 5.61, 5.84, 6.27, 7.02, 8.04, 9.06, 8.37, 7.76, 7.56, 6.84, 6.26, 5.36, 4.71, 4.95, 5.37, 5.51, 5.49, 5.41, 5.06, 4.59, 4.13, 3.58, 2.81, 2.42, 1.89, 1.07, 0.679, 0.732]);
                self.shape_map.insert("set1-a", vec![0.801, 0.751, 0.648, 0.551, 0.466, 0.397, 0.457, 1.97, 3.58, 3.99, 2.57, 1.19, 0.609, 0.532, 0.636, 0.878, 1.19, 1.69, 2.34, 3.23, 3.81, 3.14, 2.78, 2.89, 2.75, 2.74, 3.03, 3.47, 3.8, 4.26, 4.98, 5.54, 5.77, 5.74, 5.81, 5.76, 5.35, 5.13, 4.7, 4.23, 3.53, 3.04, 1.69, 2.07, 2.31]);
                self.shape_map.insert("set1-amp", vec![0.801, 0.755, 0.644, 0.539, 0.451, 0.384, 1.32, 4.11, 5.26, 5.77, 5.23, 4.7, 4.25, 4.47, 4.81, 4.91, 4.86, 4.84, 4.89, 5.13, 5.64, 6.47, 7.18, 6.53, 5.55, 5.31, 4.55, 3.76, 3.19, 2.56, 2.18, 2.35, 2.81, 3.1, 3.35, 3.52, 3.45, 3.09, 2.58, 2.12, 1.68, 1.13, 0.79, 1.43, 2.0]);
                self.shape_map.insert("set1-e", vec![0.801, 0.76, 0.657, 0.558, 0.472, 0.404, 0.589, 2.83, 4.96, 5.39, 5.86, 5.39, 4.99, 4.87, 5.25, 6.02, 6.45, 6.79, 7.12, 7.51, 7.2, 5.79, 5.33, 4.62, 3.74, 2.99, 2.43, 1.88, 1.34, 1.02, 0.856, 0.767, 0.673, 0.661, 0.706, 0.702, 0.638, 0.478, 0.47, 0.588, 0.839, 0.993, 1.26, 1.19, 2.02]);
                self.shape_map.insert("set1-i", vec![0.801, 0.757, 0.645, 0.538, 0.45, 0.396, 1.79, 5.14, 6.59, 6.94, 6.57, 6.33, 6.33, 7.13, 8.48, 9.1, 9.81, 10.3, 10.7, 11.1, 11.7, 12.3, 12.7, 11.4, 9.81, 8.74, 7.08, 5.25, 3.41, 1.88, 1.05, 0.68, 0.502, 0.424, 0.458, 0.439, 0.44, 0.308, 0.266, 0.337, 0.559, 0.703, 0.835, 1.03, 2.04]);
                self.shape_map.insert("set1-o", vec![0.801, 0.749, 0.631, 0.522, 0.432, 0.4, 2.07, 4.36, 5.22, 4.75, 4.17, 3.67, 3.62, 4.13, 4.04, 3.57, 2.97, 2.34, 1.89, 1.76, 1.86, 1.65, 0.704, 0.658, 0.615, 0.501, 0.577, 0.895, 1.34, 2.02, 3.27, 4.93, 6.57, 6.93, 8.07, 13.1, 15.0, 14.6, 11.7, 7.81, 4.15, 2.37, 1.05, 0.431, 0.335]);
                self.shape_map.insert("set1-u", vec![0.801, 0.751, 0.626, 0.512, 0.423, 0.747, 3.96, 5.99, 6.9, 6.58, 6.22, 5.98, 6.41, 7.08, 7.33, 7.26, 6.67, 5.64, 4.81, 4.35, 4.33, 4.26, 2.94, 2.05, 1.58, 0.976, 0.593, 0.45, 0.433, 0.701, 1.47, 2.37, 3.09, 3.63, 4.03, 4.08, 4.03, 7.34, 8.62, 5.07, 1.95, 1.23, 0.507, 0.312, 0.301]);
                self.shape_map.insert("set1-y", vec![0.801, 0.752, 0.639, 0.534, 0.445, 0.38, 1.3, 3.76, 4.67, 5.08, 4.59, 4.2, 4.01, 4.51, 5.59, 6.27, 6.9, 7.5, 8.09, 8.8, 8.85, 7.71, 7.32, 6.61, 5.23, 3.94, 2.61, 1.43, 0.774, 0.553, 0.503, 0.544, 0.706, 0.753, 0.808, 0.758, 0.828, 1.03, 1.26, 1.43, 1.57, 1.32, 0.615, 0.322, 0.292]);
                self.shape_map.insert("set2-3-r-colored", vec![0.41, 0.404, 0.399, 0.355, 0.224, 0.326, 0.993, 1.53, 1.45, 1.27, 1.14, 0.955, 0.888, 1.09, 1.37, 1.57, 1.77, 1.99, 2.15, 2.37, 2.72, 3.0, 3.32, 3.86, 4.29, 4.42, 4.28, 3.94, 3.58, 3.22, 2.89, 2.58, 2.14, 1.52, 0.959, 0.58, 0.501, 0.834, 1.69, 2.77, 3.35, 3.35, 2.95, 2.26, 1.41]);
                self.shape_map.insert("set2-A", vec![0.45, 0.332, 0.237, 0.24, 0.269, 0.313, 0.322, 0.652, 1.04, 1.03, 0.809, 0.576, 0.386, 0.314, 0.301, 0.328, 0.377, 0.393, 0.439, 0.637, 1.09, 1.53, 1.87, 2.41, 3.07, 3.59, 3.86, 3.96, 4.17, 4.69, 5.36, 5.87, 6.33, 6.56, 6.53, 6.39, 6.15, 5.63, 5.0, 4.29, 3.9, 3.91, 3.82, 3.84, 3.98]);
                self.shape_map.insert("set2-E", vec![0.21, 0.174, 0.152, 0.152, 0.122, 0.262, 0.648, 1.09, 1.26, 1.14, 0.881, 0.762, 0.879, 1.32, 1.88, 2.42, 2.93, 3.49, 3.88, 4.2, 4.26, 4.25, 4.3, 4.14, 3.69, 3.21, 2.91, 2.61, 2.42, 2.31, 2.07, 1.78, 1.55, 1.43, 1.46, 1.68, 2.0, 2.35, 2.57, 2.43, 2.21, 2.19, 2.25, 2.05, 1.55]);
                self.shape_map.insert("set2-I", vec![0.2, 0.189, 0.18, 0.183, 0.152, 0.469, 1.11, 1.56, 1.57, 1.29, 1.07, 1.26, 2.04, 2.91, 3.34, 3.91, 4.32, 4.56, 5.06, 5.43, 5.57, 5.54, 5.21, 4.59, 3.98, 3.47, 3.0, 2.65, 2.39, 2.01, 1.76, 1.47, 1.1, 0.872, 0.9, 1.11, 1.42, 1.71, 1.83, 1.81, 1.81, 1.78, 1.55, 1.26, 1.04]);
                self.shape_map.insert("set2-N", vec![0.51, 0.501, 0.471, 0.388, 0.398, 0.57, 0.746, 0.895, 1.17, 1.3, 1.08, 0.836, 0.786, 0.897, 0.873, 0.852, 1.06, 1.15, 1.06, 1.16, 1.27, 1.14, 0.907, 0.737, 0.671, 0.649, 0.516, 0.247, 0.0464, 0.0, 0.0, 0.0, 0.0, 0.0, 0.259, 1.62, 3.97, 6.24, 8.03, 8.66, 7.58, 5.52, 3.58, 2.29, 1.46]);
                self.shape_map.insert("set2-O", vec![0.61, 0.455, 0.245, 0.153, 0.0912, 0.18, 0.239, 0.611, 1.2, 1.34, 1.05, 0.697, 0.522, 0.576, 0.689, 0.611, 0.512, 0.558, 0.649, 0.755, 0.915, 1.04, 1.0, 1.04, 1.62, 2.64, 3.31, 3.42, 3.6, 4.17, 4.95, 5.45, 5.7, 6.11, 6.81, 7.01, 6.57, 6.09, 5.48, 4.55, 3.18, 1.98, 1.4, 1.07, 0.847]);
                self.shape_map.insert("set2-U", vec![0.32, 0.363, 0.398, 0.418, 0.5, 0.984, 1.77, 2.14, 1.91, 1.47, 1.19, 1.19, 1.3, 1.3, 1.17, 1.1, 0.994, 1.03, 1.15, 1.2, 1.13, 0.971, 1.06, 1.34, 1.48, 1.62, 1.86, 2.08, 2.41, 2.85, 3.27, 3.73, 4.24, 4.72, 5.34, 5.72, 5.69, 5.31, 4.71, 3.64, 2.21, 1.27, 0.771, 0.334, 0.151]);
                self.shape_map.insert("set2-V", vec![0.33, 0.312, 0.262, 0.197, 0.166, 0.247, 0.355, 0.672, 1.08, 1.2, 1.05, 0.853, 0.758, 0.796, 0.871, 0.87, 1.03, 1.27, 1.38, 1.48, 1.56, 1.64, 1.83, 2.08, 2.35, 2.69, 3.04, 3.33, 3.6, 3.96, 4.47, 4.84, 4.97, 5.07, 5.48, 5.81, 5.75, 5.56, 5.14, 4.55, 3.66, 2.76, 2.17, 1.74, 1.29]);
                self.shape_map.insert("set2-ae-{", vec![0.22, 0.245, 0.264, 0.222, 0.163, 0.166, 0.401, 0.902, 1.32, 1.35, 1.08, 0.908, 1.22, 2.07, 2.57, 2.48, 2.63, 3.31, 4.09, 4.79, 5.33, 5.56, 5.71, 5.73, 5.4, 4.89, 4.58, 4.51, 4.35, 4.11, 3.94, 3.84, 3.91, 3.91, 3.97, 4.19, 4.46, 4.69, 4.74, 4.56, 4.25, 4.05, 3.94, 3.78, 3.38]);
                self.shape_map.insert("set2-i", vec![0.33, 0.322, 0.336, 0.355, 0.486, 0.579, 1.17, 2.26, 2.91, 2.83, 2.76, 3.19, 3.77, 4.2, 4.73, 5.4, 5.72, 6.1, 6.34, 6.22, 6.07, 5.82, 5.3, 4.38, 3.32, 2.52, 2.04, 1.58, 1.06, 0.604, 0.409, 0.262, 0.136, 0.131, 0.189, 0.237, 0.289, 0.328, 0.333, 0.391, 0.663, 1.18, 1.65, 1.72, 1.47]);
                self.shape_map.insert("set2-k", vec![0.34, 0.353, 0.428, 0.639, 1.04, 1.33, 1.3, 1.12, 0.875, 0.825, 1.13, 1.53, 1.74, 2.03, 2.18, 2.05, 2.0, 1.92, 1.84, 1.83, 1.58, 1.33, 1.43, 1.49, 1.1, 0.5, 0.121, 0.0496, 0.0679, 0.0925, 0.11, 0.0805, 0.114, 0.429, 1.11, 1.93, 2.38, 2.43, 2.59, 3.39, 3.6, 2.69, 2.19, 1.96, 1.49]);
                self.shape_map.insert("set2-l", vec![0.55, 0.606, 0.732, 1.38, 2.52, 3.37, 3.56, 3.39, 3.23, 2.98, 3.01, 3.45, 3.79, 3.82, 3.36, 3.0, 3.03, 3.14, 3.1, 3.16, 3.29, 3.38, 3.54, 3.65, 3.65, 3.69, 3.72, 3.88, 4.33, 4.85, 5.46, 6.09, 6.54, 6.64, 6.82, 6.95, 6.44, 5.2, 3.71, 1.85, 0.754, 2.1, 3.86, 4.08, 3.39]);
                self.shape_map.insert("set2-m", vec![0.57, 0.583, 0.403, 0.404, 1.34, 2.6, 3.08, 3.01, 3.31, 3.92, 3.99, 3.74, 3.48, 3.44, 3.67, 3.68, 3.52, 3.65, 3.7, 3.79, 4.26, 4.38, 3.95, 3.63, 3.26, 2.84, 2.67, 2.41, 2.12, 2.17, 2.44, 2.68, 3.02, 3.48, 4.12, 4.66, 4.74, 4.36, 3.85, 3.14, 1.95, 0.751, 0.124, 0.0, 0.0]);
                self.shape_map.insert("set2-n", vec![0.26, 0.256, 0.211, 0.195, 0.185, 0.254, 0.812, 1.46, 1.54, 1.22, 0.892, 0.835, 1.12, 1.74, 2.31, 2.54, 2.68, 2.95, 3.27, 3.66, 3.82, 3.46, 3.0, 2.45, 1.72, 1.42, 1.61, 1.76, 1.71, 1.44, 1.01, 0.535, 0.251, 0.2, 0.194, 0.0849, 0.0, 0.0, 0.0, 0.0, 0.0718, 0.793, 1.43, 1.4, 1.17]);
                self.shape_map.insert("set2-o", vec![0.18, 0.179, 0.204, 0.258, 0.432, 0.992, 1.5, 1.41, 1.05, 0.945, 1.7, 2.57, 2.52, 2.25, 2.14, 2.1, 2.08, 1.97, 1.9, 1.92, 1.75, 1.6, 1.81, 1.94, 1.6, 1.1, 0.733, 0.548, 0.522, 0.736, 1.16, 1.63, 2.26, 2.93, 3.61, 4.33, 5.27, 6.59, 7.1, 5.58, 3.41, 1.9, 0.943, 0.453, 0.217]);
                self.shape_map.insert("set2-p", vec![0.31, 0.358, 0.413, 0.57, 0.987, 1.52, 1.76, 1.63, 1.41, 1.15, 1.43, 2.25, 2.56, 2.56, 2.83, 2.99, 2.73, 2.61, 2.83, 3.08, 3.24, 3.36, 3.42, 3.32, 3.35, 3.62, 3.64, 3.27, 2.81, 2.28, 1.8, 1.52, 1.56, 1.75, 1.91, 2.03, 2.18, 2.35, 2.46, 2.43, 2.32, 1.92, 1.25, 0.755, 0.286]);
                self.shape_map.insert("set2-t", vec![0.38, 0.45, 0.46, 0.738, 1.22, 1.52, 1.51, 1.22, 1.02, 0.924, 0.955, 1.26, 1.92, 2.48, 2.73, 3.13, 3.53, 3.95, 4.64, 5.32, 5.78, 6.2, 6.48, 6.29, 5.81, 5.31, 4.73, 4.11, 3.64, 3.33, 2.93, 2.41, 1.92, 1.52, 1.29, 1.02, 0.678, 0.308, 0.044, 0.00762, 0.0712, 0.188, 0.772, 1.32, 1.24]);
                self.shape_map.insert("set2-u", vec![0.4, 0.398, 0.339, 0.372, 0.56, 1.29, 2.45, 2.92, 2.61, 2.41, 3.36, 5.1, 5.9, 5.94, 5.78, 5.61, 5.46, 5.08, 4.7, 4.6, 4.71, 4.5, 3.78, 3.24, 2.85, 2.06, 1.07, 0.425, 0.251, 0.266, 0.33, 0.494, 0.685, 0.805, 1.24, 1.96, 2.43, 3.09, 4.47, 4.96, 3.49, 1.77, 0.884, 0.518, 0.519]);
                self.shape_map.insert("set3-A", vec![0.2, 0.317, 0.406, 0.578, 0.834, 1.39, 1.33, 1.1, 0.701, 0.286, 0.488, 0.757, 1.11, 1.32, 1.46, 1.53, 1.54, 1.52, 1.7, 2.01, 2.48, 3.04, 3.27, 3.53, 3.81, 4.08, 4.33, 4.54, 4.73, 4.73, 4.82, 4.98, 5.2, 5.37, 5.03, 4.56, 3.88, 3.11, 2.75, 2.37, 1.98, 1.55, 1.29, 1.35, 1.68]);
                self.shape_map.insert("set3-Act", vec![0.56, 0.409, 0.269, 0.21, 0.231, 0.338, 0.636, 0.648, 0.521, 0.343, 0.24, 0.264, 0.341, 0.502, 0.776, 1.31, 1.53, 1.34, 1.3, 1.52, 2.03, 2.33, 2.62, 2.96, 3.35, 4.03, 4.69, 5.18, 5.52, 5.58, 5.45, 5.46, 5.23, 4.86, 4.57, 4.28, 4.09, 3.97, 3.83, 3.56, 3.0, 2.68, 2.58, 2.55, 2.48]);
                self.shape_map.insert("set3-E", vec![0.18, 0.169, 0.279, 0.421, 0.752, 0.729, 0.657, 0.522, 0.526, 0.509, 0.519, 0.926, 1.17, 1.4, 1.57, 1.72, 1.7, 1.57, 1.66, 1.95, 2.22, 2.31, 2.15, 2.0, 1.84, 1.82, 1.79, 1.77, 1.71, 1.7, 1.73, 1.9, 1.81, 1.6, 1.39, 1.29, 1.42, 1.56, 1.72, 1.61, 1.54, 1.55, 1.72, 1.65, 1.53]);
                self.shape_map.insert("set3-I", vec![0.21, 0.179, 0.244, 0.339, 0.465, 0.68, 0.752, 0.798, 0.818, 0.966, 0.977, 1.07, 1.28, 1.79, 2.0, 2.1, 2.06, 1.68, 1.87, 2.17, 2.61, 2.76, 2.64, 2.47, 2.25, 1.94, 1.81, 1.72, 1.68, 1.62, 1.55, 1.44, 1.3, 1.21, 1.14, 1.16, 1.25, 1.62, 1.45, 1.21, 0.888, 0.96, 1.02, 1.04, 1.03]);
                self.shape_map.insert("set3-O", vec![0.82, 0.987, 1.04, 0.952, 0.784, 0.583, 0.459, 0.433, 0.403, 0.397, 0.47, 0.784, 0.954, 1.03, 0.982, 0.897, 0.672, 0.766, 1.31, 2.23, 3.24, 3.58, 4.03, 4.66, 5.38, 6.11, 6.66, 7.1, 7.43, 7.54, 7.74, 7.88, 8.01, 8.09, 8.4, 8.44, 8.33, 8.44, 8.26, 7.32, 4.53, 3.0, 2.18, 1.72, 1.44]);
                self.shape_map.insert("set3-U", vec![0.07, 0.0869, 0.0869, 0.0745, 0.0742, 0.118, 0.306, 0.52, 0.613, 0.577, 0.389, 0.215, 0.218, 0.347, 0.6, 1.03, 1.24, 0.894, 0.573, 0.461, 0.869, 1.31, 1.5, 1.56, 1.56, 1.78, 2.28, 2.59, 2.77, 2.79, 2.89, 3.04, 3.02, 2.86, 2.68, 2.44, 2.44, 2.38, 2.34, 2.34, 2.1, 1.59, 1.25, 1.03, 0.92]);
                self.shape_map.insert("set3-V", vec![0.18, 0.24, 0.353, 0.52, 0.741, 0.701, 0.506, 0.407, 0.404, 0.353, 0.384, 0.455, 0.576, 0.879, 0.881, 0.743, 0.442, 0.329, 0.527, 0.768, 1.06, 1.3, 1.49, 1.71, 1.94, 2.51, 2.85, 3.14, 3.38, 3.43, 3.28, 3.05, 2.75, 2.28, 2.15, 2.08, 2.04, 1.97, 1.71, 1.47, 1.26, 1.52, 1.56, 1.51, 1.39]);
                self.shape_map.insert("set3-ae-{", vec![0.26, 0.23, 0.339, 0.455, 0.969, 1.09, 1.21, 1.12, 1.1, 1.09, 1.2, 1.34, 1.58, 1.99, 2.16, 2.28, 2.51, 2.86, 3.41, 3.97, 4.24, 4.46, 4.54, 4.52, 4.37, 4.43, 4.51, 4.88, 4.99, 4.89, 4.77, 4.41, 4.04, 3.38, 3.11, 3.01, 3.4, 3.44, 3.45, 3.09, 3.22, 3.29, 3.45, 3.22, 3.0]);
                self.shape_map.insert("set3-i", vec![0.36, 0.44, 0.615, 0.799, 1.0, 1.25, 2.69, 3.42, 3.45, 3.1, 2.86, 3.34, 3.97, 4.6, 5.02, 5.21, 4.79, 4.22, 3.68, 3.33, 3.22, 3.3, 3.19, 2.78, 2.16, 1.44, 0.819, 0.472, 0.277, 0.206, 0.201, 0.259, 0.349, 0.471, 0.63, 0.644, 0.628, 0.76, 0.879, 0.881, 0.961, 1.2, 1.32, 1.36, 1.33]);
                self.shape_map.insert("set3-ict", vec![0.5, 0.44, 0.394, 0.411, 0.57, 0.992, 1.76, 1.93, 1.97, 1.97, 2.08, 2.6, 3.3, 3.97, 4.34, 4.14, 3.49, 3.01, 2.64, 2.46, 2.41, 2.13, 1.69, 1.22, 0.805, 0.485, 0.213, 0.0952, 0.0516, 0.0593, 0.0732, 0.113, 0.178, 0.242, 0.306, 0.373, 0.459, 0.558, 0.713, 0.939, 1.43, 1.8, 1.9, 1.82, 1.62]);
                self.shape_map.insert("set3-o", vec![0.17, 0.179, 0.422, 0.623, 0.723, 0.644, 0.55, 0.485, 0.495, 0.56, 0.655, 0.828, 1.04, 1.11, 0.991, 0.629, 0.543, 0.981, 1.66, 2.4, 2.76, 2.67, 2.92, 3.23, 3.52, 3.84, 4.84, 5.63, 6.12, 6.15, 6.02, 5.63, 5.45, 5.35, 5.49, 5.21, 4.73, 4.11, 3.37, 2.48, 1.61, 1.35, 1.31, 1.3, 1.22]);
                self.shape_map.insert("set3-u", vec![0.22, 0.358, 0.603, 0.793, 0.961, 1.35, 2.26, 2.99, 2.38, 2.04, 2.03, 2.18, 2.28, 2.59, 2.98, 3.06, 2.98, 2.68, 2.11, 1.42, 1.12, 1.47, 1.79, 1.83, 1.59, 1.32, 1.1, 1.3, 1.61, 1.94, 2.29, 2.65, 2.98, 3.09, 3.1, 3.19, 3.37, 3.55, 3.36, 2.9, 2.34, 1.62, 0.961, 0.505, 0.254]);
            }
            VoicePart::Tenor => {
                self.shape_map.insert("set1-2", vec![0.801, 0.743, 0.63, 0.527, 0.438, 0.364, 0.996, 2.82, 3.15, 3.63, 3.19, 2.79, 2.53, 3.25, 4.42, 5.3, 6.31, 7.14, 7.92, 8.77, 9.54, 9.18, 7.8, 7.24, 6.0, 4.6, 3.32, 2.17, 1.3, 0.954, 0.899, 0.932, 0.991, 1.11, 1.12, 1.15, 1.01, 0.947, 1.01, 1.17, 1.44, 2.2, 1.54, 0.646, 0.42, 0.408]);
                self.shape_map.insert("set1-6", vec![0.801, 0.749, 0.645, 0.549, 0.461, 0.391, 0.513, 2.09, 3.51, 3.95, 3.32, 2.33, 1.56, 1.56, 1.8, 1.93, 2.17, 2.53, 2.96, 3.43, 4.01, 4.71, 4.94, 3.88, 3.53, 3.36, 3.12, 3.04, 3.19, 3.42, 3.64, 4.13, 4.84, 5.3, 5.4, 5.69, 5.7, 5.48, 4.9, 4.46, 3.92, 3.39, 2.85, 2.24, 1.88, 2.54]);
                self.shape_map.insert("set1-9", vec![0.801, 0.747, 0.64, 0.54, 0.452, 0.381, 0.652, 2.41, 3.49, 3.91, 3.29, 2.57, 1.98, 1.99, 2.57, 2.88, 3.19, 3.55, 4.18, 5.04, 6.09, 7.23, 7.53, 6.51, 6.2, 5.73, 5.11, 4.72, 4.34, 3.95, 3.94, 4.43, 4.86, 4.97, 4.94, 4.98, 4.82, 4.28, 3.82, 3.36, 2.91, 2.6, 2.36, 1.4, 1.04, 0.911]);
                self.shape_map.insert("set1-E", vec![0.801, 0.755, 0.654, 0.557, 0.47, 0.402, 0.475, 2.11, 3.98, 4.75, 4.49, 3.78, 3.17, 2.86, 3.15, 3.72, 4.04, 4.37, 4.86, 5.64, 6.82, 7.56, 6.8, 6.65, 6.28, 5.65, 5.02, 4.34, 3.52, 2.91, 2.68, 2.77, 2.9, 2.86, 2.79, 2.83, 2.78, 2.57, 2.28, 2.13, 2.02, 1.79, 1.65, 1.77, 1.88, 2.39]);
                self.shape_map.insert("set1-E-long", vec![0.801, 0.759, 0.659, 0.564, 0.478, 0.411, 0.42, 1.97, 4.21, 5.19, 4.91, 4.04, 3.15, 2.69, 3.07, 3.21, 3.35, 3.58, 4.0, 4.71, 5.24, 4.5, 4.21, 4.32, 3.94, 3.52, 3.1, 2.69, 2.17, 1.7, 1.62, 1.72, 1.83, 1.8, 1.81, 1.86, 1.88, 1.75, 1.64, 1.66, 1.75, 1.74, 1.88, 2.02, 1.87, 2.28]);
                self.shape_map.insert("set1-I", vec![0.801, 0.757, 0.651, 0.55, 0.461, 0.391, 0.849, 3.53, 5.06, 5.77, 5.67, 5.31, 5.08, 5.27, 6.12, 7.04, 7.65, 8.17, 8.58, 9.01, 9.63, 10.5, 11.7, 12.3, 10.9, 10.0, 9.12, 7.52, 5.74, 3.89, 2.54, 2.02, 1.94, 1.93, 1.84, 1.88, 1.84, 1.73, 1.44, 1.17, 0.965, 0.855, 0.677, 0.722, 1.4, 1.89]);
                self.shape_map.insert("set1-O", vec![0.801, 0.747, 0.638, 0.538, 0.448, 0.377, 0.742, 2.59, 3.61, 3.87, 2.93, 2.03, 1.46, 1.65, 1.73, 1.78, 1.66, 1.41, 1.22, 1.2, 1.45, 1.8, 1.77, 1.07, 1.2, 1.29, 1.47, 1.84, 2.6, 3.5, 4.53, 5.91, 7.05, 7.93, 8.31, 8.8, 8.9, 8.29, 7.67, 6.59, 5.37, 4.45, 2.57, 1.67, 1.01, 0.876]);
                self.shape_map.insert("set1-U", vec![0.801, 0.743, 0.627, 0.522, 0.432, 0.368, 1.27, 3.14, 3.49, 3.78, 3.18, 2.74, 2.51, 3.2, 3.83, 4.18, 3.95, 3.4, 2.84, 2.57, 2.61, 2.61, 1.7, 1.01, 0.882, 0.6, 0.454, 0.492, 0.705, 1.04, 1.79, 2.87, 3.79, 4.3, 4.59, 4.81, 4.67, 4.63, 4.83, 4.97, 6.53, 3.64, 1.93, 0.849, 0.442, 0.391]);
                self.shape_map.insert("set1-Y", vec![0.801, 0.75, 0.634, 0.527, 0.436, 0.387, 1.86, 4.34, 5.03, 5.18, 4.66, 4.24, 4.01, 4.6, 5.01, 5.27, 5.39, 5.54, 5.72, 6.06, 6.65, 7.53, 8.68, 9.01, 7.86, 7.76, 7.25, 6.61, 5.93, 5.04, 4.71, 5.1, 5.44, 5.51, 5.44, 5.37, 4.93, 4.54, 4.03, 3.5, 2.72, 2.36, 1.87, 1.01, 0.677, 0.733]);
                self.shape_map.insert("set1-a", vec![0.801, 0.752, 0.651, 0.557, 0.47, 0.403, 0.417, 1.68, 3.38, 4.03, 2.94, 1.45, 0.685, 0.517, 0.596, 0.787, 1.07, 1.48, 2.08, 2.84, 3.64, 3.61, 2.75, 2.92, 2.82, 2.71, 2.81, 3.23, 3.6, 3.92, 4.5, 5.18, 5.66, 5.78, 5.71, 5.8, 5.71, 5.28, 5.1, 4.62, 4.15, 3.47, 2.96, 1.65, 2.1, 2.31]);
                self.shape_map.insert("set1-&", vec![0.801, 0.756, 0.648, 0.545, 0.456, 0.384, 1.01, 3.78, 5.13, 5.81, 5.34, 4.83, 4.29, 4.34, 4.76, 4.89, 4.89, 4.83, 4.85, 5.0, 5.38, 6.05, 6.94, 7.13, 5.86, 5.49, 5.03, 4.19, 3.53, 2.96, 2.38, 2.17, 2.48, 2.92, 3.13, 3.41, 3.51, 3.41, 3.01, 2.52, 2.05, 1.63, 1.1, 0.793, 1.46, 2.01]);
                self.shape_map.insert("set1-e", vec![0.801, 0.76, 0.66, 0.564, 0.477, 0.411, 0.461, 2.42, 4.8, 5.24, 5.91, 5.49, 5.04, 4.86, 5.06, 5.81, 6.31, 6.68, 6.97, 7.38, 7.51, 6.38, 5.51, 5.06, 4.18, 3.37, 2.73, 2.22, 1.65, 1.19, 0.956, 0.82, 0.739, 0.657, 0.674, 0.701, 0.704, 0.607, 0.461, 0.481, 0.614, 0.857, 1.01, 1.25, 1.21, 2.03]);
                self.shape_map.insert("set1-i", vec![0.801, 0.758, 0.649, 0.544, 0.455, 0.39, 1.44, 4.76, 6.39, 6.98, 6.64, 6.37, 6.23, 6.8, 8.17, 8.88, 9.58, 10.1, 10.5, 10.9, 11.4, 12.0, 12.6, 12.4, 10.4, 9.41, 8.07, 6.35, 4.5, 2.8, 1.5, 0.902, 0.616, 0.467, 0.422, 0.461, 0.439, 0.426, 0.288, 0.269, 0.359, 0.576, 0.717, 0.819, 1.07, 2.06]);
                self.shape_map.insert("set1-o", vec![0.801, 0.75, 0.635, 0.527, 0.438, 0.393, 1.73, 4.14, 5.14, 4.89, 4.28, 3.76, 3.53, 4.04, 4.12, 3.74, 3.19, 2.56, 2.03, 1.77, 1.83, 1.82, 1.16, 0.575, 0.674, 0.552, 0.506, 0.678, 1.06, 1.53, 2.39, 3.76, 5.48, 6.81, 6.95, 9.03, 13.8, 15.2, 14.1, 11.2, 7.3, 3.94, 2.25, 0.991, 0.424, 0.335]);
                self.shape_map.insert("set1-u", vec![0.801, 0.751, 0.63, 0.518, 0.429, 0.576, 3.52, 5.87, 6.81, 6.67, 6.29, 6.0, 6.17, 6.96, 7.29, 7.31, 6.96, 6.0, 5.1, 4.49, 4.28, 4.36, 3.75, 2.31, 1.88, 1.28, 0.781, 0.51, 0.429, 0.476, 0.919, 1.77, 2.59, 3.27, 3.73, 4.07, 4.04, 4.24, 8.01, 8.33, 4.56, 1.8, 1.17, 0.483, 0.309, 0.302]);
                self.shape_map.insert("set1-y", vec![0.801, 0.752, 0.643, 0.54, 0.45, 0.379, 1.01, 3.5, 4.55, 5.14, 4.68, 4.28, 3.99, 4.27, 5.32, 6.03, 6.7, 7.27, 7.85, 8.5, 8.99, 8.28, 7.37, 7.13, 5.96, 4.65, 3.37, 2.08, 1.1, 0.662, 0.525, 0.502, 0.584, 0.734, 0.767, 0.799, 0.755, 0.858, 1.07, 1.28, 1.47, 1.54, 1.31, 0.577, 0.319, 0.292]);
                self.shape_map.insert("set2-3", vec![0.41, 0.404, 0.399, 0.357, 0.234, 0.315, 0.906, 1.46, 1.48, 1.3, 1.17, 1.0, 0.885, 1.01, 1.28, 1.51, 1.69, 1.9, 2.09, 2.25, 2.53, 2.92, 3.09, 3.55, 4.17, 4.4, 4.42, 4.15, 3.78, 3.44, 3.09, 2.8, 2.47, 1.96, 1.35, 0.854, 0.547, 0.546, 0.966, 1.85, 2.84, 3.36, 3.32, 2.92, 2.24, 1.41]);
                self.shape_map.insert("set2-A", vec![0.45, 0.332, 0.24, 0.24, 0.267, 0.308, 0.321, 0.598, 0.978, 1.04, 0.861, 0.631, 0.429, 0.325, 0.301, 0.315, 0.358, 0.396, 0.405, 0.519, 0.826, 1.38, 1.69, 2.05, 2.76, 3.36, 3.77, 3.91, 3.98, 4.32, 4.96, 5.54, 6.02, 6.45, 6.5, 6.5, 6.34, 6.05, 5.53, 4.9, 4.23, 3.9, 3.9, 3.82, 3.85, 3.97]);
                self.shape_map.insert("set2-E", vec![0.21, 0.174, 0.152, 0.152, 0.126, 0.228, 0.57, 1.06, 1.27, 1.15, 0.935, 0.792, 0.821, 1.14, 1.69, 2.25, 2.79, 3.33, 3.74, 4.06, 4.24, 4.27, 4.26, 4.35, 3.92, 3.42, 3.07, 2.78, 2.54, 2.37, 2.27, 1.98, 1.67, 1.5, 1.41, 1.52, 1.74, 2.03, 2.39, 2.6, 2.39, 2.19, 2.2, 2.25, 2.03, 1.55]);
                self.shape_map.insert("set2-I", vec![0.2, 0.189, 0.18, 0.183, 0.155, 0.424, 1.01, 1.52, 1.61, 1.37, 1.07, 1.07, 1.85, 2.77, 3.22, 3.73, 4.17, 4.47, 4.84, 5.28, 5.54, 5.59, 5.48, 4.95, 4.23, 3.72, 3.23, 2.83, 2.55, 2.23, 1.92, 1.67, 1.38, 1.03, 0.828, 0.923, 1.17, 1.49, 1.76, 1.82, 1.81, 1.81, 1.76, 1.53, 1.26, 1.04]);
                self.shape_map.insert("set2-N", vec![0.51, 0.501, 0.472, 0.391, 0.397, 0.553, 0.725, 0.874, 1.12, 1.28, 1.14, 0.889, 0.777, 0.857, 0.902, 0.848, 0.951, 1.17, 1.11, 1.06, 1.27, 1.26, 1.01, 0.797, 0.677, 0.667, 0.633, 0.405, 0.134, 0.0186, 0.0, 0.0, 0.0, 0.0, 0.0, 0.518, 2.12, 4.42, 6.56, 8.16, 8.54, 7.37, 5.38, 3.51, 2.26, 1.46]);
                self.shape_map.insert("set2-O", vec![0.61, 0.455, 0.25, 0.157, 0.0954, 0.17, 0.232, 0.551, 1.1, 1.33, 1.13, 0.78, 0.548, 0.544, 0.654, 0.667, 0.534, 0.517, 0.615, 0.703, 0.83, 1.01, 1.06, 0.943, 1.13, 2.1, 3.11, 3.39, 3.42, 3.75, 4.48, 5.16, 5.51, 5.81, 6.26, 6.9, 6.91, 6.47, 5.99, 5.36, 4.38, 3.06, 1.94, 1.39, 1.07, 0.846]);
                self.shape_map.insert("set2-U", vec![0.32, 0.363, 0.397, 0.417, 0.494, 0.935, 1.68, 2.09, 1.96, 1.56, 1.24, 1.18, 1.26, 1.32, 1.22, 1.12, 1.05, 0.974, 1.1, 1.2, 1.19, 1.06, 0.892, 1.23, 1.45, 1.5, 1.73, 1.96, 2.17, 2.58, 2.99, 3.41, 3.89, 4.39, 4.85, 5.45, 5.73, 5.62, 5.22, 4.57, 3.46, 2.12, 1.23, 0.749, 0.329, 0.151]);
                self.shape_map.insert("set2-V", vec![0.33, 0.312, 0.263, 0.2, 0.168, 0.238, 0.342, 0.622, 1.01, 1.18, 1.09, 0.898, 0.768, 0.778, 0.847, 0.883, 0.938, 1.19, 1.36, 1.42, 1.54, 1.58, 1.7, 1.96, 2.2, 2.5, 2.86, 3.17, 3.42, 3.7, 4.15, 4.62, 4.89, 4.99, 5.12, 5.58, 5.8, 5.72, 5.49, 5.06, 4.44, 3.57, 2.72, 2.15, 1.73, 1.29]);
                self.shape_map.insert("set2-{", vec![0.22, 0.245, 0.264, 0.225, 0.168, 0.164, 0.357, 0.805, 1.28, 1.4, 1.15, 0.863, 1.04, 1.92, 2.46, 2.5, 2.58, 3.03, 3.76, 4.49, 5.1, 5.52, 5.62, 5.8, 5.66, 5.12, 4.7, 4.56, 4.45, 4.26, 4.05, 3.91, 3.84, 3.9, 3.89, 3.99, 4.25, 4.52, 4.72, 4.73, 4.52, 4.23, 4.04, 3.93, 3.77, 3.37]);
                self.shape_map.insert("set2-i", vec![0.33, 0.322, 0.336, 0.354, 0.473, 0.571, 1.06, 2.06, 2.89, 2.9, 2.68, 3.02, 3.67, 4.08, 4.59, 5.2, 5.61, 5.96, 6.25, 6.31, 6.14, 5.97, 5.66, 4.95, 3.79, 2.84, 2.29, 1.85, 1.36, 0.875, 0.534, 0.365, 0.23, 0.121, 0.133, 0.208, 0.245, 0.302, 0.331, 0.331, 0.412, 0.718, 1.23, 1.66, 1.72, 1.47]);
                self.shape_map.insert("set2-k", vec![0.34, 0.353, 0.426, 0.629, 1.01, 1.3, 1.31, 1.15, 0.916, 0.827, 1.05, 1.43, 1.68, 1.93, 2.15, 2.13, 1.98, 1.98, 1.84, 1.83, 1.78, 1.37, 1.3, 1.57, 1.41, 0.806, 0.245, 0.0636, 0.0572, 0.0741, 0.106, 0.102, 0.0671, 0.175, 0.585, 1.32, 2.05, 2.39, 2.44, 2.72, 3.43, 3.51, 2.65, 2.18, 1.95, 1.49]);
                self.shape_map.insert("set2-l", vec![0.55, 0.603, 0.705, 1.3, 2.44, 3.34, 3.58, 3.41, 3.28, 3.0, 2.91, 3.36, 3.74, 3.94, 3.51, 3.01, 2.97, 3.13, 3.11, 3.08, 3.26, 3.33, 3.44, 3.65, 3.65, 3.65, 3.71, 3.72, 3.98, 4.51, 5.03, 5.67, 6.26, 6.64, 6.63, 6.87, 6.97, 6.3, 4.95, 3.48, 1.6, 0.652, 2.24, 3.97, 4.09, 3.38]);
                self.shape_map.insert("set2-m", vec![0.57, 0.583, 0.407, 0.403, 1.27, 2.48, 3.03, 3.03, 3.25, 3.79, 4.0, 3.81, 3.51, 3.45, 3.57, 3.73, 3.58, 3.54, 3.73, 3.7, 3.95, 4.56, 4.19, 3.71, 3.56, 2.98, 2.75, 2.61, 2.24, 2.08, 2.28, 2.52, 2.77, 3.15, 3.61, 4.27, 4.7, 4.67, 4.28, 3.77, 2.99, 1.83, 0.702, 0.117, 0.0, 0.0]);
                self.shape_map.insert("set2-n", vec![0.26, 0.256, 0.212, 0.196, 0.185, 0.246, 0.739, 1.36, 1.54, 1.29, 0.96, 0.831, 1.01, 1.54, 2.15, 2.51, 2.63, 2.83, 3.14, 3.47, 3.85, 3.75, 3.16, 2.84, 2.06, 1.4, 1.49, 1.72, 1.76, 1.64, 1.3, 0.834, 0.419, 0.229, 0.205, 0.167, 0.0624, 0.0, 0.0, 0.0, 0.0, 0.143, 0.843, 1.43, 1.4, 1.17]);
                self.shape_map.insert("set2-o", vec![0.18, 0.179, 0.203, 0.255, 0.419, 0.936, 1.44, 1.44, 1.12, 0.954, 1.5, 2.37, 2.59, 2.34, 2.16, 2.12, 2.08, 2.03, 1.9, 1.9, 1.9, 1.59, 1.61, 2.02, 1.86, 1.35, 0.891, 0.631, 0.505, 0.557, 0.886, 1.3, 1.82, 2.47, 3.08, 3.77, 4.51, 5.54, 6.72, 6.9, 5.31, 3.26, 1.83, 0.918, 0.447, 0.217]);
                self.shape_map.insert("set2-p", vec![0.31, 0.358, 0.411, 0.562, 0.956, 1.47, 1.74, 1.65, 1.44, 1.2, 1.34, 2.02, 2.5, 2.58, 2.7, 2.98, 2.88, 2.59, 2.69, 2.99, 3.18, 3.32, 3.41, 3.42, 3.23, 3.47, 3.75, 3.5, 3.09, 2.61, 2.09, 1.67, 1.51, 1.63, 1.78, 1.94, 2.06, 2.21, 2.37, 2.46, 2.42, 2.28, 1.87, 1.22, 0.744, 0.286]);
                self.shape_map.insert("set2-t", vec![0.38, 0.45, 0.46, 0.724, 1.18, 1.49, 1.51, 1.27, 1.05, 0.938, 0.942, 1.17, 1.7, 2.35, 2.68, 2.96, 3.41, 3.77, 4.29, 5.08, 5.62, 5.98, 6.43, 6.53, 6.05, 5.59, 5.07, 4.47, 3.87, 3.53, 3.21, 2.75, 2.25, 1.79, 1.45, 1.23, 0.947, 0.605, 0.258, 0.0368, 0.0152, 0.079, 0.232, 0.799, 1.32, 1.24]);
                self.shape_map.insert("set2-u", vec![0.4, 0.399, 0.337, 0.363, 0.501, 1.16, 2.37, 2.96, 2.68, 2.28, 2.93, 4.85, 5.87, 5.98, 5.84, 5.62, 5.58, 5.23, 4.78, 4.57, 4.64, 4.79, 4.16, 3.37, 3.1, 2.63, 1.62, 0.679, 0.26, 0.244, 0.277, 0.354, 0.553, 0.736, 0.828, 1.37, 2.13, 2.5, 3.21, 4.7, 4.98, 3.31, 1.62, 0.834, 0.504, 0.519]);
                self.shape_map.insert("set3-A", vec![0.2, 0.317, 0.401, 0.554, 0.833, 1.34, 1.34, 1.19, 0.7, 0.361, 0.423, 0.634, 1.09, 1.26, 1.41, 1.54, 1.51, 1.52, 1.6, 1.79, 2.39, 2.78, 3.12, 3.39, 3.76, 3.94, 4.09, 4.45, 4.68, 4.73, 4.65, 4.89, 5.13, 5.25, 5.29, 4.93, 4.34, 3.74, 3.11, 2.67, 2.3, 1.94, 1.55, 1.27, 1.36, 1.68]);
                self.shape_map.insert("set3-Act", vec![0.56, 0.409, 0.274, 0.211, 0.219, 0.337, 0.6, 0.647, 0.569, 0.368, 0.24, 0.258, 0.31, 0.424, 0.668, 1.21, 1.45, 1.47, 1.22, 1.43, 1.85, 2.17, 2.43, 2.78, 3.2, 3.71, 4.24, 4.77, 5.45, 5.6, 5.54, 5.41, 5.43, 5.15, 4.71, 4.5, 4.28, 4.04, 3.95, 3.79, 3.49, 2.99, 2.65, 2.58, 2.55, 2.47]);
                self.shape_map.insert("set3-E", vec![0.18, 0.169, 0.272, 0.396, 0.751, 0.732, 0.682, 0.521, 0.525, 0.516, 0.491, 0.855, 1.06, 1.36, 1.53, 1.66, 1.79, 1.54, 1.63, 1.74, 2.19, 2.27, 2.27, 2.08, 1.9, 1.83, 1.8, 1.79, 1.75, 1.68, 1.72, 1.81, 1.87, 1.78, 1.5, 1.37, 1.28, 1.47, 1.59, 1.72, 1.59, 1.54, 1.54, 1.73, 1.64, 1.53]);
                self.shape_map.insert("set3-I", vec![0.21, 0.179, 0.241, 0.328, 0.465, 0.66, 0.738, 0.793, 0.818, 0.939, 0.973, 1.01, 1.26, 1.64, 1.92, 2.14, 2.03, 1.82, 1.77, 1.97, 2.53, 2.69, 2.74, 2.58, 2.32, 2.1, 1.91, 1.75, 1.71, 1.66, 1.59, 1.52, 1.38, 1.27, 1.19, 1.12, 1.19, 1.32, 1.62, 1.41, 1.15, 0.894, 0.957, 1.02, 1.04, 1.03]);
                self.shape_map.insert("set3-O", vec![0.82, 0.986, 1.03, 0.963, 0.806, 0.583, 0.473, 0.437, 0.411, 0.378, 0.47, 0.708, 0.888, 1.04, 0.993, 0.906, 0.761, 0.704, 0.826, 2.06, 2.89, 3.41, 3.73, 4.27, 5.17, 5.77, 6.28, 6.7, 7.35, 7.53, 7.63, 7.71, 7.86, 8.11, 8.13, 8.41, 8.44, 8.3, 8.48, 8.1, 6.98, 4.51, 2.84, 2.14, 1.71, 1.44]);
                self.shape_map.insert("set3-U", vec![0.07, 0.0869, 0.0869, 0.0759, 0.0694, 0.118, 0.284, 0.478, 0.609, 0.624, 0.388, 0.257, 0.211, 0.269, 0.514, 0.947, 1.16, 1.11, 0.69, 0.392, 0.729, 1.08, 1.4, 1.57, 1.54, 1.68, 1.94, 2.34, 2.75, 2.79, 2.83, 2.9, 3.05, 3.02, 2.77, 2.62, 2.44, 2.44, 2.36, 2.35, 2.31, 2.09, 1.53, 1.23, 1.03, 0.92]);
                self.shape_map.insert("set3-V", vec![0.18, 0.24, 0.348, 0.499, 0.741, 0.704, 0.541, 0.408, 0.404, 0.362, 0.374, 0.414, 0.567, 0.793, 0.888, 0.888, 0.435, 0.371, 0.411, 0.63, 1.01, 1.19, 1.36, 1.59, 1.89, 2.2, 2.54, 3.02, 3.3, 3.4, 3.37, 3.23, 2.93, 2.62, 2.25, 2.11, 2.06, 2.02, 1.97, 1.65, 1.44, 1.28, 1.51, 1.56, 1.51, 1.39]);
                self.shape_map.insert("set3-{", vec![0.26, 0.23, 0.331, 0.455, 0.931, 1.06, 1.21, 1.13, 1.1, 1.09, 1.17, 1.26, 1.56, 1.86, 2.12, 2.25, 2.42, 2.61, 3.33, 3.68, 4.15, 4.38, 4.5, 4.58, 4.44, 4.36, 4.44, 4.71, 4.85, 5.01, 4.86, 4.69, 4.28, 3.83, 3.33, 3.02, 3.1, 3.39, 3.46, 3.4, 3.08, 3.25, 3.3, 3.44, 3.21, 3.0]);
                self.shape_map.insert("set3-i", vec![0.36, 0.44, 0.607, 0.784, 0.976, 1.25, 2.52, 3.28, 3.54, 3.15, 2.86, 3.22, 3.71, 4.44, 4.95, 5.14, 4.96, 4.56, 3.91, 3.32, 3.24, 3.26, 3.3, 3.1, 2.38, 1.79, 1.23, 0.714, 0.314, 0.238, 0.204, 0.21, 0.268, 0.389, 0.526, 0.633, 0.644, 0.624, 0.802, 0.881, 0.89, 0.957, 1.23, 1.33, 1.36, 1.32]);
                self.shape_map.insert("set3-ict", vec![0.5, 0.44, 0.396, 0.407, 0.523, 0.992, 1.67, 1.9, 1.98, 1.95, 2.08, 2.47, 3.02, 3.8, 4.35, 4.14, 3.75, 3.27, 2.76, 2.45, 2.42, 2.28, 2.01, 1.45, 0.935, 0.639, 0.392, 0.168, 0.0478, 0.0556, 0.0648, 0.0798, 0.12, 0.206, 0.262, 0.322, 0.373, 0.48, 0.583, 0.757, 0.998, 1.42, 1.84, 1.9, 1.81, 1.62]);
                self.shape_map.insert("set3-o", vec![0.17, 0.179, 0.413, 0.609, 0.732, 0.644, 0.561, 0.497, 0.482, 0.537, 0.654, 0.786, 0.952, 1.14, 1.06, 0.689, 0.577, 0.729, 1.22, 2.33, 2.63, 2.72, 2.73, 3.07, 3.43, 3.69, 4.17, 4.98, 6.06, 6.19, 6.11, 5.91, 5.52, 5.43, 5.36, 5.42, 5.2, 4.61, 3.96, 3.2, 2.37, 1.6, 1.33, 1.31, 1.3, 1.22]);
                self.shape_map.insert("set3-u", vec![0.22, 0.358, 0.594, 0.781, 0.944, 1.23, 2.21, 2.92, 2.49, 2.11, 1.98, 2.16, 2.23, 2.52, 2.85, 3.05, 3.05, 2.9, 2.25, 1.62, 1.26, 1.26, 1.61, 1.95, 1.7, 1.44, 1.22, 1.16, 1.34, 1.74, 2.09, 2.45, 2.77, 2.98, 3.08, 3.11, 3.22, 3.43, 3.52, 3.33, 2.87, 2.27, 1.54, 0.926, 0.496, 0.254]);
            }
            VoicePart::Bass => {
                self.shape_map.insert("set1-2", vec![0.801, 0.746, 0.644, 0.544, 0.461, 0.389, 0.467, 1.87, 3.19, 3.21, 3.63, 3.11, 2.77, 2.52, 3.07, 4.3, 5.04, 5.98, 6.78, 7.53, 8.23, 9.07, 9.59, 8.93, 7.72, 7.24, 6.09, 4.85, 3.59, 2.52, 1.6, 1.06, 0.903, 0.916, 0.933, 1.02, 1.11, 1.12, 1.15, 1.02, 0.95, 0.967, 1.12, 1.23, 1.79, 2.16, 1.25, 0.548, 0.413, 0.409]);
                self.shape_map.insert("set1-6", vec![0.801, 0.752, 0.658, 0.564, 0.484, 0.415, 0.365, 1.04, 2.84, 3.65, 3.98, 3.13, 2.27, 1.56, 1.51, 1.79, 1.88, 2.07, 2.36, 2.73, 3.14, 3.6, 4.16, 4.8, 4.91, 3.86, 3.52, 3.4, 3.17, 3.05, 3.09, 3.32, 3.49, 3.76, 4.33, 4.92, 5.34, 5.4, 5.67, 5.71, 5.55, 5.08, 4.63, 4.16, 3.74, 3.13, 2.79, 2.02, 1.93, 2.57]);
                self.shape_map.insert("set1-9", vec![0.801, 0.75, 0.653, 0.557, 0.475, 0.407, 0.373, 1.34, 3.07, 3.57, 3.9, 3.16, 2.52, 1.98, 1.93, 2.5, 2.78, 3.08, 3.37, 3.83, 4.51, 5.35, 6.38, 7.35, 7.48, 6.49, 6.21, 5.82, 5.24, 4.81, 4.51, 4.13, 3.85, 4.07, 4.56, 4.9, 4.97, 4.94, 4.98, 4.85, 4.42, 3.94, 3.54, 3.15, 2.69, 2.68, 2.06, 1.24, 1.01, 0.911]);
                self.shape_map.insert("set1-E", vec![0.801, 0.758, 0.666, 0.573, 0.493, 0.425, 0.371, 0.951, 3.02, 4.24, 4.85, 4.37, 3.74, 3.18, 2.86, 3.02, 3.62, 3.92, 4.21, 4.58, 5.12, 5.98, 7.08, 7.55, 6.7, 6.65, 6.3, 5.75, 5.16, 4.58, 3.83, 3.18, 2.74, 2.69, 2.8, 2.91, 2.85, 2.78, 2.83, 2.78, 2.64, 2.35, 2.17, 2.08, 1.94, 1.69, 1.66, 1.8, 1.91, 2.42]);
                self.shape_map.insert("set1-E-long", vec![0.801, 0.761, 0.672, 0.579, 0.501, 0.433, 0.375, 0.829, 2.93, 4.59, 5.3, 4.8, 3.97, 3.17, 2.7, 2.97, 3.19, 3.29, 3.45, 3.75, 4.26, 4.93, 5.21, 4.33, 4.23, 4.31, 3.97, 3.57, 3.2, 2.83, 2.38, 1.9, 1.61, 1.65, 1.76, 1.83, 1.8, 1.81, 1.86, 1.87, 1.79, 1.65, 1.64, 1.72, 1.77, 1.73, 1.95, 1.99, 1.89, 2.3]);
                self.shape_map.insert("set1-I", vec![0.801, 0.76, 0.664, 0.566, 0.484, 0.416, 0.425, 1.94, 4.45, 5.14, 5.9, 5.61, 5.28, 5.07, 5.22, 5.9, 6.85, 7.45, 7.93, 8.41, 8.7, 9.2, 9.78, 10.6, 11.8, 12.3, 11.0, 10.1, 9.41, 8.08, 6.49, 4.77, 3.22, 2.26, 1.98, 1.94, 1.92, 1.84, 1.88, 1.85, 1.76, 1.54, 1.26, 1.06, 0.9, 0.81, 0.623, 0.888, 1.4, 1.93]);
                self.shape_map.insert("set1-O", vec![0.801, 0.75, 0.652, 0.554, 0.471, 0.402, 0.4, 1.49, 3.22, 3.73, 3.74, 2.77, 1.98, 1.47, 1.62, 1.72, 1.78, 1.73, 1.52, 1.3, 1.18, 1.24, 1.54, 1.85, 1.71, 1.06, 1.19, 1.27, 1.41, 1.69, 2.24, 3.04, 3.92, 4.98, 6.24, 7.22, 8.0, 8.3, 8.76, 8.92, 8.42, 7.91, 6.98, 6.04, 4.85, 3.85, 2.21, 1.53, 0.961, 0.877]);
                self.shape_map.insert("set1-U", vec![0.801, 0.746, 0.641, 0.54, 0.456, 0.383, 0.579, 2.26, 3.38, 3.68, 3.66, 3.1, 2.71, 2.5, 3.1, 3.74, 4.13, 4.09, 3.64, 3.1, 2.68, 2.54, 2.63, 2.56, 1.6, 0.998, 0.906, 0.636, 0.474, 0.45, 0.607, 0.85, 1.28, 2.15, 3.17, 3.87, 4.35, 4.59, 4.8, 4.69, 4.58, 4.78, 4.9, 5.77, 5.73, 2.75, 1.61, 0.677, 0.426, 0.392]);
                self.shape_map.insert("set1-Y", vec![0.801, 0.753, 0.649, 0.544, 0.459, 0.387, 0.841, 3.22, 4.61, 5.27, 5.04, 4.6, 4.21, 4.0, 4.53, 4.95, 5.22, 5.34, 5.47, 5.63, 5.83, 6.21, 6.83, 7.69, 8.75, 9.01, 7.88, 7.77, 7.41, 6.77, 6.26, 5.46, 4.77, 4.8, 5.19, 5.48, 5.5, 5.44, 5.37, 5.01, 4.59, 4.2, 3.73, 3.07, 2.56, 2.15, 1.68, 0.878, 0.67, 0.739]);
                self.shape_map.insert("set1-a", vec![0.801, 0.755, 0.664, 0.572, 0.493, 0.426, 0.368, 0.749, 2.45, 3.7, 3.98, 2.66, 1.38, 0.686, 0.513, 0.579, 0.716, 0.97, 1.27, 1.77, 2.34, 3.14, 3.76, 3.45, 2.72, 2.92, 2.83, 2.71, 2.76, 3.06, 3.46, 3.77, 4.1, 4.76, 5.33, 5.71, 5.77, 5.71, 5.79, 5.75, 5.34, 5.14, 4.83, 4.41, 3.84, 3.31, 2.6, 1.57, 2.19, 2.31]);
                self.shape_map.insert("set1-amp", vec![0.801, 0.759, 0.662, 0.562, 0.479, 0.41, 0.467, 2.22, 4.58, 5.35, 5.76, 5.26, 4.78, 4.29, 4.3, 4.7, 4.86, 4.9, 4.84, 4.84, 4.88, 5.09, 5.5, 6.18, 6.99, 7.14, 5.92, 5.5, 5.2, 4.45, 3.76, 3.25, 2.68, 2.25, 2.21, 2.56, 2.95, 3.13, 3.39, 3.51, 3.45, 3.16, 2.68, 2.28, 1.87, 1.45, 0.947, 0.842, 1.56, 2.02]);
                self.shape_map.insert("set1-e", vec![0.801, 0.763, 0.673, 0.579, 0.5, 0.433, 0.378, 1.05, 3.51, 5.06, 5.4, 5.88, 5.46, 5.04, 4.86, 4.99, 5.58, 6.15, 6.53, 6.82, 7.11, 7.48, 7.42, 6.08, 5.47, 5.05, 4.24, 3.49, 2.85, 2.39, 1.88, 1.39, 1.07, 0.9, 0.798, 0.718, 0.652, 0.675, 0.701, 0.702, 0.644, 0.489, 0.457, 0.532, 0.728, 0.91, 1.09, 1.2, 1.3, 2.06]);
                self.shape_map.insert("set1-i", vec![0.801, 0.761, 0.662, 0.561, 0.478, 0.411, 0.564, 2.97, 5.61, 6.75, 6.91, 6.58, 6.35, 6.21, 6.71, 7.93, 8.71, 9.32, 9.92, 10.3, 10.7, 11.0, 11.5, 12.1, 12.6, 12.3, 10.5, 9.54, 8.44, 6.92, 5.26, 3.6, 2.15, 1.23, 0.805, 0.581, 0.455, 0.422, 0.461, 0.436, 0.442, 0.324, 0.261, 0.298, 0.454, 0.635, 0.777, 0.769, 1.23, 2.06]);
                self.shape_map.insert("set1-o", vec![0.801, 0.753, 0.648, 0.546, 0.46, 0.389, 0.755, 3.01, 4.62, 5.25, 4.72, 4.2, 3.73, 3.51, 3.99, 4.15, 3.86, 3.39, 2.82, 2.28, 1.88, 1.75, 1.85, 1.79, 1.06, 0.572, 0.678, 0.573, 0.498, 0.589, 0.887, 1.3, 1.79, 2.82, 4.17, 5.8, 6.88, 6.95, 8.59, 13.5, 14.9, 14.8, 12.4, 9.35, 5.47, 3.18, 1.86, 0.808, 0.4, 0.334]);
                self.shape_map.insert("set1-u", vec![0.801, 0.755, 0.645, 0.537, 0.451, 0.389, 1.79, 5.08, 6.2, 6.89, 6.55, 6.24, 5.97, 6.13, 6.91, 7.25, 7.33, 7.16, 6.41, 5.56, 4.79, 4.36, 4.29, 4.34, 3.63, 2.29, 1.91, 1.39, 0.873, 0.569, 0.45, 0.423, 0.6, 1.19, 2.0, 2.73, 3.33, 3.73, 4.06, 4.06, 4.0, 6.79, 8.81, 6.64, 2.88, 1.49, 0.964, 0.412, 0.301, 0.303]);
                self.shape_map.insert("set1-y", vec![0.801, 0.755, 0.657, 0.556, 0.473, 0.404, 0.479, 2.13, 4.14, 4.76, 5.07, 4.61, 4.25, 3.98, 4.21, 5.13, 5.84, 6.48, 7.01, 7.57, 8.08, 8.72, 8.95, 8.03, 7.36, 7.12, 6.08, 4.81, 3.7, 2.47, 1.44, 0.808, 0.578, 0.51, 0.507, 0.619, 0.736, 0.768, 0.802, 0.752, 0.819, 0.996, 1.21, 1.35, 1.58, 1.41, 1.19, 0.477, 0.308, 0.293]);
                self.shape_map.insert("set2-3-r-colored", vec![0.41, 0.403, 0.399, 0.365, 0.272, 0.268, 0.56, 1.16, 1.6, 1.42, 1.25, 1.15, 0.988, 0.884, 0.982, 1.23, 1.46, 1.62, 1.82, 2.01, 2.15, 2.34, 2.63, 2.94, 3.11, 3.54, 4.14, 4.36, 4.41, 4.24, 3.94, 3.62, 3.3, 2.98, 2.72, 2.39, 1.89, 1.33, 0.884, 0.572, 0.483, 0.699, 1.5, 2.51, 3.16, 3.37, 3.21, 2.78, 2.15, 1.41]);
                self.shape_map.insert("set2-A", vec![0.45, 0.332, 0.248, 0.238, 0.258, 0.291, 0.318, 0.384, 0.713, 1.11, 1.02, 0.819, 0.613, 0.433, 0.33, 0.302, 0.303, 0.34, 0.391, 0.39, 0.44, 0.609, 0.963, 1.43, 1.71, 2.04, 2.73, 3.27, 3.67, 3.87, 3.95, 4.1, 4.47, 5.17, 5.7, 6.12, 6.5, 6.49, 6.49, 6.36, 6.17, 5.72, 5.11, 4.49, 4.03, 3.91, 3.87, 3.82, 3.85, 3.97]);
                self.shape_map.insert("set2-E", vec![0.21, 0.173, 0.155, 0.15, 0.141, 0.102, 0.42, 0.864, 1.14, 1.24, 1.14, 0.886, 0.781, 0.815, 1.06, 1.6, 2.17, 2.6, 3.06, 3.52, 3.87, 4.17, 4.24, 4.26, 4.26, 4.34, 3.94, 3.5, 3.14, 2.89, 2.6, 2.44, 2.32, 2.16, 1.93, 1.62, 1.48, 1.41, 1.5, 1.68, 1.99, 2.3, 2.51, 2.55, 2.29, 2.12, 2.27, 2.21, 1.97, 1.55]);
                self.shape_map.insert("set2-I", vec![0.2, 0.189, 0.181, 0.182, 0.167, 0.244, 0.621, 1.4, 1.63, 1.53, 1.28, 1.07, 1.08, 1.84, 2.69, 3.14, 3.57, 4.02, 4.36, 4.58, 5.07, 5.39, 5.55, 5.57, 5.45, 4.94, 4.26, 3.8, 3.36, 2.96, 2.65, 2.42, 2.05, 1.83, 1.59, 1.31, 1.01, 0.827, 0.919, 1.13, 1.41, 1.67, 1.83, 1.8, 1.81, 1.83, 1.69, 1.47, 1.23, 1.04]);
                self.shape_map.insert("set2-N", vec![0.51, 0.5, 0.474, 0.407, 0.392, 0.481, 0.641, 0.789, 0.92, 1.22, 1.3, 1.09, 0.871, 0.776, 0.841, 0.922, 0.845, 0.854, 1.14, 1.14, 1.06, 1.13, 1.27, 1.23, 1.0, 0.796, 0.682, 0.667, 0.641, 0.49, 0.253, 0.0569, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.44, 1.73, 3.8, 5.91, 7.83, 8.69, 8.08, 6.58, 4.8, 3.26, 2.18, 1.46]);
                self.shape_map.insert("set2-O", vec![0.61, 0.454, 0.27, 0.174, 0.112, 0.132, 0.206, 0.314, 0.683, 1.3, 1.34, 1.06, 0.753, 0.551, 0.531, 0.63, 0.719, 0.551, 0.493, 0.572, 0.649, 0.742, 0.873, 1.01, 1.06, 0.941, 1.12, 1.95, 2.86, 3.32, 3.41, 3.53, 3.92, 4.72, 5.36, 5.56, 5.85, 6.27, 6.86, 6.97, 6.58, 6.17, 5.59, 4.89, 3.72, 2.58, 1.77, 1.32, 1.04, 0.845]);
                self.shape_map.insert("set2-U", vec![0.32, 0.362, 0.393, 0.413, 0.469, 0.737, 1.28, 1.92, 2.17, 1.86, 1.43, 1.19, 1.18, 1.25, 1.33, 1.25, 1.13, 1.09, 0.95, 1.04, 1.15, 1.2, 1.15, 1.03, 0.907, 1.22, 1.44, 1.5, 1.67, 1.88, 2.07, 2.33, 2.72, 3.11, 3.55, 4.01, 4.44, 4.86, 5.41, 5.71, 5.7, 5.39, 4.84, 4.01, 2.76, 1.74, 1.09, 0.662, 0.311, 0.151]);
                self.shape_map.insert("set2-V", vec![0.33, 0.311, 0.267, 0.212, 0.176, 0.204, 0.289, 0.425, 0.729, 1.14, 1.2, 1.05, 0.883, 0.768, 0.77, 0.831, 0.896, 0.854, 1.1, 1.3, 1.37, 1.46, 1.55, 1.6, 1.71, 1.96, 2.19, 2.45, 2.77, 3.06, 3.31, 3.55, 3.81, 4.3, 4.77, 4.93, 5.0, 5.13, 5.54, 5.79, 5.75, 5.61, 5.2, 4.77, 4.02, 3.22, 2.54, 2.07, 1.68, 1.29]);
                self.shape_map.insert("set2-ae-{", vec![0.22, 0.245, 0.261, 0.234, 0.187, 0.154, 0.182, 0.531, 1.08, 1.36, 1.34, 1.11, 0.866, 1.04, 1.84, 2.36, 2.53, 2.53, 2.7, 3.38, 4.12, 4.73, 5.22, 5.52, 5.62, 5.79, 5.66, 5.2, 4.79, 4.57, 4.51, 4.36, 4.15, 3.99, 3.88, 3.85, 3.89, 3.89, 3.98, 4.21, 4.45, 4.65, 4.76, 4.68, 4.35, 4.14, 4.01, 3.9, 3.72, 3.37]);
                self.shape_map.insert("set2-i", vec![0.33, 0.321, 0.334, 0.349, 0.425, 0.538, 0.624, 1.49, 2.62, 2.92, 2.82, 2.72, 3.03, 3.67, 4.04, 4.48, 5.01, 5.49, 5.78, 6.14, 6.33, 6.22, 6.09, 5.92, 5.62, 4.94, 3.84, 2.99, 2.42, 2.0, 1.61, 1.11, 0.647, 0.461, 0.323, 0.206, 0.121, 0.133, 0.205, 0.24, 0.287, 0.324, 0.335, 0.327, 0.494, 0.934, 1.4, 1.68, 1.69, 1.47]);
                self.shape_map.insert("set2-k", vec![0.34, 0.352, 0.418, 0.587, 0.891, 1.19, 1.33, 1.26, 1.08, 0.832, 0.823, 1.11, 1.46, 1.67, 1.9, 2.14, 2.2, 1.96, 2.01, 1.89, 1.83, 1.82, 1.67, 1.36, 1.31, 1.57, 1.42, 0.893, 0.378, 0.108, 0.049, 0.0653, 0.0818, 0.118, 0.0955, 0.0582, 0.201, 0.599, 1.26, 1.95, 2.37, 2.42, 2.45, 3.23, 3.6, 3.14, 2.5, 2.14, 1.9, 1.49]);
                self.shape_map.insert("set2-l", vec![0.55, 0.602, 0.695, 1.19, 2.14, 3.02, 3.47, 3.5, 3.35, 3.19, 2.98, 2.95, 3.36, 3.73, 3.92, 3.57, 3.13, 2.98, 3.06, 3.14, 3.1, 3.13, 3.27, 3.34, 3.45, 3.64, 3.65, 3.65, 3.69, 3.71, 3.87, 4.27, 4.73, 5.24, 5.81, 6.31, 6.62, 6.62, 6.86, 6.94, 6.42, 5.33, 4.03, 2.49, 1.17, 1.23, 2.71, 3.99, 4.02, 3.38]);
                self.shape_map.insert("set2-m", vec![0.57, 0.582, 0.424, 0.402, 0.987, 1.99, 2.84, 3.1, 2.99, 3.36, 3.96, 3.99, 3.78, 3.51, 3.45, 3.5, 3.78, 3.61, 3.47, 3.68, 3.69, 3.76, 4.11, 4.5, 4.16, 3.7, 3.56, 3.06, 2.8, 2.65, 2.41, 2.13, 2.08, 2.36, 2.59, 2.83, 3.2, 3.62, 4.22, 4.66, 4.75, 4.43, 3.95, 3.41, 2.43, 1.35, 0.512, 0.0924, 0.0, 0.0]);
                self.shape_map.insert("set2-n", vec![0.26, 0.255, 0.216, 0.198, 0.188, 0.217, 0.448, 0.991, 1.55, 1.54, 1.19, 0.905, 0.831, 1.0, 1.46, 2.04, 2.48, 2.58, 2.71, 2.99, 3.27, 3.61, 3.83, 3.66, 3.14, 2.83, 2.1, 1.49, 1.45, 1.63, 1.76, 1.73, 1.55, 1.18, 0.679, 0.342, 0.22, 0.205, 0.175, 0.0797, 0.0, 0.0, 0.0, 0.0, 0.0, 0.423, 1.04, 1.42, 1.37, 1.17]);
                self.shape_map.insert("set2-o", vec![0.18, 0.179, 0.201, 0.245, 0.367, 0.71, 1.2, 1.53, 1.37, 0.985, 0.94, 1.66, 2.43, 2.59, 2.37, 2.16, 2.14, 2.08, 2.07, 1.95, 1.89, 1.92, 1.82, 1.59, 1.63, 2.01, 1.86, 1.43, 1.0, 0.709, 0.55, 0.506, 0.62, 1.01, 1.42, 1.94, 2.56, 3.09, 3.72, 4.36, 5.15, 6.44, 7.25, 6.13, 4.24, 2.66, 1.54, 0.821, 0.423, 0.216]);
                self.shape_map.insert("set2-p", vec![0.31, 0.357, 0.405, 0.531, 0.832, 1.26, 1.64, 1.75, 1.59, 1.37, 1.13, 1.4, 2.09, 2.5, 2.59, 2.61, 2.97, 3.0, 2.6, 2.61, 2.83, 3.05, 3.2, 3.33, 3.41, 3.41, 3.23, 3.43, 3.68, 3.6, 3.27, 2.88, 2.41, 1.93, 1.55, 1.5, 1.65, 1.78, 1.93, 2.03, 2.16, 2.33, 2.45, 2.46, 2.38, 2.14, 1.67, 1.13, 0.696, 0.286]);
                self.shape_map.insert("set2-t", vec![0.38, 0.449, 0.458, 0.669, 1.04, 1.38, 1.53, 1.45, 1.17, 0.985, 0.917, 0.95, 1.19, 1.68, 2.29, 2.65, 2.8, 3.3, 3.6, 4.01, 4.65, 5.26, 5.69, 6.04, 6.42, 6.52, 6.07, 5.65, 5.19, 4.67, 4.12, 3.67, 3.41, 3.1, 2.6, 2.15, 1.74, 1.44, 1.25, 1.0, 0.704, 0.357, 0.0581, 0.00831, 0.0447, 0.11, 0.402, 0.909, 1.31, 1.24]);
                self.shape_map.insert("set2-u", vec![0.4, 0.398, 0.342, 0.358, 0.463, 0.924, 1.83, 2.64, 2.85, 2.56, 2.41, 3.14, 4.86, 5.86, 5.96, 5.85, 5.67, 5.58, 5.37, 5.03, 4.69, 4.58, 4.66, 4.7, 4.12, 3.37, 3.11, 2.69, 1.84, 0.966, 0.424, 0.252, 0.258, 0.303, 0.404, 0.582, 0.74, 0.827, 1.36, 2.04, 2.43, 3.0, 4.13, 4.89, 4.22, 2.69, 1.4, 0.773, 0.505, 0.518]);
                self.shape_map.insert("set3-A", vec![0.2, 0.316, 0.385, 0.461, 0.832, 1.13, 1.38, 1.3, 0.952, 0.661, 0.286, 0.468, 0.648, 1.09, 1.24, 1.37, 1.52, 1.52, 1.53, 1.52, 1.7, 1.93, 2.46, 2.88, 3.13, 3.38, 3.72, 3.88, 4.06, 4.37, 4.52, 4.74, 4.73, 4.73, 4.82, 5.23, 5.26, 5.28, 4.94, 4.49, 3.87, 3.18, 2.88, 2.56, 2.04, 1.78, 1.53, 1.19, 1.43, 1.67]);
                self.shape_map.insert("set3-Act", vec![0.56, 0.408, 0.295, 0.215, 0.199, 0.309, 0.459, 0.643, 0.648, 0.48, 0.342, 0.24, 0.26, 0.306, 0.387, 0.661, 1.04, 1.36, 1.56, 1.29, 1.3, 1.44, 2.01, 2.22, 2.45, 2.77, 3.17, 3.56, 4.0, 4.79, 5.17, 5.47, 5.61, 5.5, 5.42, 5.38, 5.12, 4.69, 4.52, 4.27, 4.08, 3.98, 3.9, 3.62, 3.23, 2.89, 2.58, 2.59, 2.54, 2.47]);
                self.shape_map.insert("set3-E", vec![0.18, 0.168, 0.248, 0.357, 0.687, 0.742, 0.719, 0.585, 0.521, 0.526, 0.507, 0.49, 0.895, 1.05, 1.35, 1.5, 1.62, 1.76, 1.64, 1.58, 1.66, 1.9, 2.19, 2.29, 2.25, 2.07, 1.91, 1.82, 1.81, 1.79, 1.76, 1.72, 1.69, 1.69, 1.88, 1.85, 1.77, 1.49, 1.38, 1.28, 1.41, 1.54, 1.7, 1.68, 1.54, 1.56, 1.57, 1.74, 1.62, 1.52]);
                self.shape_map.insert("set3-I", vec![0.21, 0.179, 0.229, 0.281, 0.464, 0.581, 0.685, 0.786, 0.803, 0.83, 0.964, 0.974, 1.01, 1.26, 1.59, 1.86, 2.11, 2.06, 2.0, 1.68, 1.87, 2.1, 2.59, 2.71, 2.72, 2.57, 2.33, 2.16, 1.93, 1.79, 1.72, 1.68, 1.63, 1.57, 1.5, 1.35, 1.26, 1.19, 1.12, 1.17, 1.25, 1.58, 1.51, 1.36, 0.928, 0.921, 0.946, 1.05, 1.04, 1.03]);
                self.shape_map.insert("set3-O", vec![0.82, 0.985, 1.02, 1.01, 0.842, 0.634, 0.531, 0.454, 0.423, 0.396, 0.396, 0.469, 0.735, 0.881, 1.05, 0.982, 0.934, 0.853, 0.653, 0.788, 1.31, 2.07, 3.22, 3.46, 3.76, 4.26, 5.1, 5.61, 6.07, 6.75, 7.09, 7.37, 7.55, 7.73, 7.77, 7.77, 8.17, 8.13, 8.39, 8.42, 8.31, 8.38, 8.54, 7.48, 5.66, 4.09, 2.56, 1.98, 1.67, 1.44]);
                self.shape_map.insert("set3-U", vec![0.07, 0.0867, 0.0867, 0.0816, 0.0612, 0.106, 0.195, 0.311, 0.602, 0.614, 0.576, 0.388, 0.241, 0.21, 0.231, 0.508, 0.813, 1.08, 1.26, 0.807, 0.572, 0.394, 0.863, 1.16, 1.41, 1.57, 1.54, 1.63, 1.77, 2.36, 2.59, 2.75, 2.79, 2.88, 2.95, 3.02, 3.02, 2.76, 2.63, 2.44, 2.44, 2.39, 2.32, 2.38, 2.2, 1.95, 1.44, 1.15, 1.01, 0.918]);
                self.shape_map.insert("set3-V", vec![0.18, 0.24, 0.327, 0.418, 0.74, 0.718, 0.681, 0.408, 0.405, 0.398, 0.352, 0.38, 0.418, 0.566, 0.764, 0.893, 0.876, 0.59, 0.422, 0.33, 0.534, 0.717, 1.05, 1.23, 1.38, 1.58, 1.86, 2.1, 2.5, 2.91, 3.12, 3.39, 3.42, 3.32, 3.18, 2.86, 2.57, 2.24, 2.11, 2.07, 2.03, 1.97, 1.8, 1.57, 1.3, 1.38, 1.49, 1.59, 1.49, 1.38]);
                self.shape_map.insert("set3-ae-{", vec![0.26, 0.23, 0.299, 0.454, 0.783, 0.985, 1.19, 1.18, 1.11, 1.1, 1.09, 1.19, 1.27, 1.56, 1.81, 2.1, 2.21, 2.33, 2.56, 2.94, 3.4, 3.91, 4.17, 4.42, 4.5, 4.58, 4.45, 4.33, 4.45, 4.53, 4.87, 4.97, 4.91, 4.83, 4.59, 4.23, 3.76, 3.33, 3.03, 3.02, 3.39, 3.42, 3.47, 3.21, 3.05, 3.35, 3.35, 3.41, 3.17, 2.99]);
                self.shape_map.insert("set3-i", vec![0.36, 0.439, 0.58, 0.724, 0.929, 1.19, 1.84, 2.73, 3.69, 3.36, 3.09, 2.85, 3.26, 3.68, 4.37, 4.9, 5.09, 5.14, 4.77, 4.08, 3.67, 3.34, 3.19, 3.27, 3.28, 3.1, 2.43, 1.92, 1.43, 0.718, 0.471, 0.291, 0.207, 0.203, 0.228, 0.265, 0.408, 0.532, 0.631, 0.643, 0.627, 0.722, 0.872, 0.888, 0.929, 1.02, 1.26, 1.36, 1.36, 1.32]);
                self.shape_map.insert("set3-ict", vec![0.5, 0.439, 0.402, 0.391, 0.444, 0.881, 1.3, 1.78, 1.99, 1.96, 1.97, 2.08, 2.52, 2.99, 3.72, 4.31, 4.21, 4.02, 3.44, 2.89, 2.63, 2.46, 2.4, 2.22, 1.97, 1.45, 0.967, 0.699, 0.482, 0.169, 0.0951, 0.0498, 0.0582, 0.0706, 0.0923, 0.119, 0.22, 0.264, 0.315, 0.372, 0.458, 0.537, 0.622, 0.934, 1.23, 1.51, 1.9, 1.9, 1.78, 1.62]);
                self.shape_map.insert("set3-o", vec![0.17, 0.179, 0.374, 0.553, 0.745, 0.663, 0.604, 0.546, 0.459, 0.505, 0.559, 0.653, 0.8, 0.943, 1.16, 1.04, 0.804, 0.613, 0.536, 1.08, 1.66, 2.34, 2.74, 2.7, 2.75, 3.07, 3.4, 3.62, 3.81, 5.01, 5.62, 6.07, 6.19, 6.07, 5.8, 5.47, 5.43, 5.36, 5.43, 5.19, 4.72, 4.23, 3.69, 2.53, 1.96, 1.53, 1.28, 1.32, 1.29, 1.22]);
                self.shape_map.insert("set3-u", vec![0.22, 0.357, 0.561, 0.733, 0.878, 1.07, 1.87, 2.5, 2.94, 2.28, 2.01, 2.01, 2.15, 2.22, 2.49, 2.77, 3.05, 3.06, 2.92, 2.61, 2.13, 1.42, 1.17, 1.33, 1.63, 1.94, 1.71, 1.49, 1.28, 1.1, 1.31, 1.56, 1.82, 2.15, 2.6, 2.84, 2.99, 3.07, 3.1, 3.19, 3.34, 3.58, 3.37, 3.08, 2.64, 2.16, 1.24, 0.789, 0.462, 0.253]);
            }
        }

    }
}

struct AudioSource {
    player: Arc<Mutex<Player>>
}

impl Iterator for AudioSource {
    type Item = f32;

    fn next(&mut self) -> Option<f32> {
        let mut player = self.player.lock().unwrap();
        let mut output = 0.0;
        if player.note_playing {
            let step = player.step;
            for voice in &mut player.voices {
                output += voice.generate(step, 0.0, 1);
            }
            player.step += 1;
        }
        Some(0.08*output)
    }
}

impl Source for AudioSource {
    fn channels(&self) -> u16 {
        return 1;
    }

    fn sample_rate(&self) -> u32 {
        return 48000;
    }

    fn total_duration(&self) -> Option<Duration> {
        return None;
    }

    fn current_frame_len(&self) -> Option<usize> {
        return None;
    }
}

fn process_midi_message(timestamp: u64, message: &[u8], data: &mut Arc<Mutex<Player>>) {
    let mut player = data.lock().unwrap();
    if message[0] == 144 {
        player.current_note = message[1];
        player.note_playing = true;
        let frequency = 440.0 * f32::powf(2.0, (player.current_note as i32-69) as f32/12.0);
        for voice in &mut player.voices {
            voice.set_frequency(frequency);
        }
    }
    else if message[0] == 128 && player.current_note == message[1] {
        player.note_playing = false;
    }
}

struct MainGui {
    player_ref: Arc<Mutex<Player>>
}

impl App for MainGui {
    fn update(&mut self, ctx: &egui::Context, _frame: &mut eframe::Frame) {
        let mut player = self.player_ref.lock().unwrap();
        CentralPanel::default().show(ctx, |ui| {
            let mut shape_changed = false;
            let old_part = player.voice_part;
            let old_voices = player.voice_count;
            ui.horizontal(|ui| {
                egui::ComboBox::from_label("Voice Part")
                    .selected_text(format!("{:?}", player.voice_part))
                    .show_ui(ui, |ui| {
                        ui.selectable_value(&mut player.voice_part, VoicePart::Soprano, "Soprano");
                        ui.selectable_value(&mut player.voice_part, VoicePart::Alto, "Alto");
                        ui.selectable_value(&mut player.voice_part, VoicePart::Tenor, "Tenor");
                        ui.selectable_value(&mut player.voice_part, VoicePart::Bass, "Bass");
                    });
                ui.add_space(10.0);
                ui.add(egui::Slider::new(&mut player.voice_count, 1..=8).text("Voices"))
            });
            egui::Grid::new("weights").show(ui, |ui| {
                let mut index = 0;
                let mut last_prefix = "set1";
                for (key, value) in player.weights.iter_mut() {
                    if !key.starts_with(last_prefix) {
                        if index > 0 {
                            ui.end_row();
                        }
                        index = 0;
                        last_prefix = &key[..4];
                    }
                    else {
                        index += 1;
                        if index%3 == 0 {
                            ui.end_row();
                        }
                    }
                    if ui.add(egui::Slider::new(value, 0.0..=1.0).text(*key)).dragged() {
                        shape_changed = true;
                    }
                    ui.add_space(10.0);
                }
            });
            let painter = ui.painter();
            let bounds = ui.available_rect_before_wrap();
            let stroke = epaint::PathStroke::new(1.0, egui::Color32::BLACK);
            painter.hline(egui::Rangef::new(bounds.min.x, bounds.max.x), bounds.max.y, stroke.clone());
            let mut points = Vec::new();
            let xscale = (bounds.max.x-bounds.min.x) / player.shape.len() as f32;
            let yscale = (bounds.max.y-bounds.min.y) / 10.0;
            for i in 0..player.shape.len() {
                let x = bounds.min.x + i as f32 * xscale;
                let y = bounds.max.y - player.shape[i]*yscale;
                points.push(egui::Pos2::new(x, y));
            }
            painter.line(points, stroke.clone());
            if shape_changed {
                player.update_shape();
            }
            if old_part != player.voice_part || old_voices != player.voice_count {
                player.rebuild();
                player.update_shape();
            }
        });
    }
}

fn main() -> Result<(), eframe::Error> {
    let player = Arc::new(Mutex::new(Player::new()));
    let source = AudioSource{ player: Arc::clone(&player) };
    let (_stream, handle) = OutputStream::try_default().unwrap();
    let _result = handle.play_raw(source.convert_samples());

    let midi_in = MidiInput::new("Chorus").unwrap();
    let in_ports = midi_in.ports();
    let in_port = &in_ports[1];
    let _conn_in = midi_in.connect(
        in_port,
        "midir-read-input",
        process_midi_message,
        Arc::clone(&player),
    ).unwrap();
    let options = NativeOptions::default();
    let gui = MainGui {
        player_ref: Arc::clone(&player)
};
    eframe::run_native(
        "Chorus",
        options,
        Box::new(|_cc| Ok(Box::new(gui))),
    )
}
