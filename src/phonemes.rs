use std::collections::{HashMap, HashSet};

pub struct Phonemes {
    shape_map: HashMap<char, Vec<f32>>,
    nasal_vowels: HashSet<char>
}

impl Phonemes {
    pub fn new() -> Self {
        let mut shape_map = HashMap::new();
        shape_map.insert('i', vec![0.33, 0.322, 0.337, 0.356, 0.498, 0.588, 1.28, 2.46, 2.93, 2.77, 2.84, 3.35, 3.77, 3.99, 4.29, 4.54, 4.59, 4.67, 4.66, 4.41, 4.19, 3.87, 3.31, 2.57, 1.94, 1.6, 1.3, 0.932, 0.582, 0.388, 0.268, 0.159, 0.124, 0.17, 0.228, 0.277, 0.324, 0.335, 0.374, 0.639, 1.25, 1.88, 2.07, 1.84]);
        shape_map.insert('l', vec![0.55, 0.608, 0.759, 1.46, 2.61, 3.4, 3.54, 3.37, 3.18, 2.97, 3.11, 3.55, 3.73, 3.39, 2.79, 2.47, 2.43, 2.36, 2.27, 2.32, 2.32, 2.35, 2.43, 2.5, 2.56, 2.66, 2.77, 3.11, 3.67, 4.33, 5.13, 5.89, 6.45, 6.76, 6.93, 6.57, 5.44, 3.94, 2.12, 0.899, 2.15, 4.28, 4.86, 4.26]);
        shape_map.insert('m', vec![0.57, 0.583, 0.399, 0.404, 1.41, 2.73, 3.13, 2.99, 3.37, 4.05, 3.98, 3.66, 3.36, 3.14, 3.28, 2.98, 2.72, 2.82, 2.69, 2.77, 3.2, 2.87, 2.48, 2.43, 2.05, 1.95, 1.9, 1.62, 1.62, 1.95, 2.25, 2.64, 3.25, 3.97, 4.63, 4.81, 4.44, 3.94, 3.32, 2.18, 0.875, 0.148, 0.0, 0.0]);
        shape_map.insert('n', vec![0.26, 0.256, 0.21, 0.194, 0.184, 0.261, 0.885, 1.55, 1.54, 1.15, 0.824, 0.839, 1.2, 1.78, 2.14, 2.13, 2.15, 2.31, 2.5, 2.76, 2.65, 2.16, 1.89, 1.4, 0.947, 1.08, 1.29, 1.33, 1.25, 0.977, 0.568, 0.251, 0.189, 0.22, 0.107, 0.0, 0.0, 0.0, 0.0, 0.0, 0.813, 1.63, 1.68, 1.46]);
        // shape_map.insert('o', vec![0.18, 0.179, 0.205, 0.261, 0.445, 1.05, 1.57, 1.39, 0.987, 0.936, 1.91, 2.78, 2.39, 1.99, 1.85, 1.72, 1.63, 1.43, 1.39, 1.39, 1.11, 1.09, 1.35, 1.26, 0.921, 0.599, 0.435, 0.363, 0.455, 0.834, 1.25, 1.88, 2.7, 3.44, 4.16, 5.0, 6.46, 7.29, 5.92, 3.75, 2.16, 1.11, 0.547, 0.271]);
        shape_map.insert('A', vec![0.45, 0.333, 0.235, 0.24, 0.271, 0.317, 0.322, 0.706, 1.11, 1.01, 0.757, 0.522, 0.333, 0.276, 0.261, 0.281, 0.312, 0.292, 0.348, 0.542, 0.952, 1.15, 1.37, 1.9, 2.38, 2.73, 2.89, 3.01, 3.46, 4.27, 4.96, 5.68, 6.43, 6.57, 6.43, 6.25, 5.74, 5.11, 4.38, 4.09, 4.29, 4.36, 4.58, 4.97]);
        // shape_map.insert('E', vec![0.21, 0.174, 0.151, 0.152, 0.118, 0.295, 0.726, 1.13, 1.24, 1.09, 0.865, 0.742, 0.911, 1.38, 1.81, 2.15, 2.48, 2.75, 2.94, 3.03, 2.99, 2.91, 2.9, 2.67, 2.36, 2.17, 2.0, 1.88, 1.84, 1.79, 1.63, 1.46, 1.4, 1.43, 1.65, 1.94, 2.28, 2.53, 2.5, 2.34, 2.38, 2.58, 2.46, 1.94]);
        // shape_map.insert('I', vec![0.2, 0.189, 0.18, 0.184, 0.149, 0.514, 1.21, 1.6, 1.53, 1.22, 1.06, 1.46, 2.23, 2.78, 3.06, 3.33, 3.46, 3.55, 3.83, 3.96, 3.91, 3.75, 3.3, 2.88, 2.58, 2.27, 2.03, 1.87, 1.67, 1.52, 1.36, 1.11, 0.902, 0.876, 1.05, 1.35, 1.67, 1.83, 1.82, 1.9, 1.96, 1.78, 1.51, 1.3]);
        shape_map.insert('N', vec![0.51, 0.501, 0.471, 0.384, 0.399, 0.588, 0.767, 0.916, 1.22, 1.31, 1.01, 0.783, 0.773, 0.86, 0.732, 0.706, 0.926, 0.849, 0.747, 0.906, 0.895, 0.696, 0.532, 0.46, 0.466, 0.45, 0.266, 0.0563, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.12, 3.53, 5.92, 7.9, 8.87, 8.17, 6.21, 4.16, 2.75, 1.83]);
        shape_map.insert('O', vec![0.61, 0.455, 0.24, 0.148, 0.087, 0.189, 0.246, 0.67, 1.3, 1.35, 0.972, 0.614, 0.481, 0.558, 0.629, 0.455, 0.384, 0.45, 0.501, 0.578, 0.701, 0.727, 0.629, 0.778, 1.51, 2.31, 2.51, 2.57, 3.02, 3.9, 4.67, 5.13, 5.79, 6.73, 7.11, 6.66, 6.19, 5.59, 4.77, 3.47, 2.22, 1.62, 1.29, 1.06]);
        // shape_map.insert('U', vec![0.32, 0.363, 0.399, 0.42, 0.507, 1.03, 1.87, 2.18, 1.86, 1.38, 1.14, 1.21, 1.31, 1.17, 0.977, 0.9, 0.737, 0.808, 0.88, 0.86, 0.747, 0.604, 0.819, 0.993, 1.05, 1.26, 1.46, 1.67, 2.11, 2.57, 3.09, 3.76, 4.46, 5.23, 5.71, 5.76, 5.4, 4.85, 3.86, 2.43, 1.43, 0.906, 0.404, 0.189]);
        shape_map.insert('V', vec![0.33, 0.312, 0.261, 0.194, 0.164, 0.256, 0.368, 0.721, 1.15, 1.21, 1.0, 0.808, 0.727, 0.747, 0.778, 0.706, 0.89, 1.02, 1.02, 1.1, 1.1, 1.16, 1.31, 1.5, 1.76, 2.08, 2.37, 2.61, 2.96, 3.55, 4.15, 4.54, 4.87, 5.38, 5.82, 5.78, 5.63, 5.21, 4.7, 3.94, 3.07, 2.51, 2.09, 1.61]);
        shape_map.insert('{', vec![0.22, 0.246, 0.265, 0.22, 0.158, 0.169, 0.445, 0.999, 1.37, 1.3, 1.01, 0.954, 1.43, 2.04, 2.21, 2.09, 2.23, 2.69, 3.2, 3.61, 3.85, 3.83, 3.87, 3.86, 3.55, 3.33, 3.34, 3.32, 3.29, 3.3, 3.36, 3.56, 3.79, 3.95, 4.13, 4.41, 4.66, 4.76, 4.65, 4.49, 4.44, 4.5, 4.52, 4.22]);
        shape_map.insert('3', vec![0.41, 0.404, 0.399, 0.353, 0.215, 0.338, 1.08, 1.61, 1.42, 1.23, 1.12, 0.906, 0.865, 1.08, 1.26, 1.34, 1.45, 1.56, 1.62, 1.78, 2.03, 2.1, 2.37, 2.85, 3.09, 3.16, 3.01, 2.78, 2.63, 2.46, 2.35, 2.12, 1.65, 1.06, 0.614, 0.455, 0.701, 1.52, 2.71, 3.52, 3.69, 3.41, 2.72, 1.77]);

        shape_map.insert('a', vec![0.801, 0.751, 0.645, 0.546, 0.46, 0.389, 0.576, 2.27, 3.74, 3.79, 2.22, 0.986, 0.532, 0.511, 0.605, 0.805, 1.06, 1.45, 1.96, 2.55, 2.58, 1.89, 1.95, 1.92, 1.9, 2.05, 2.43, 2.77, 3.19, 3.91, 4.68, 5.26, 5.59, 5.8, 5.79, 5.45, 5.16, 4.8, 4.35, 3.77, 3.4, 1.98, 2.44, 2.88]);
        shape_map.insert('e', vec![0.801, 0.759, 0.654, 0.553, 0.466, 0.397, 0.726, 3.28, 5.06, 5.59, 5.77, 5.29, 4.78, 4.51, 4.77, 5.09, 5.17, 5.2, 5.36, 5.41, 4.56, 3.77, 3.38, 2.83, 2.3, 1.9, 1.55, 1.15, 0.867, 0.746, 0.687, 0.639, 0.635, 0.704, 0.697, 0.672, 0.495, 0.462, 0.573, 0.853, 1.07, 1.44, 1.41, 2.51]);
        // shape_map.insert('i', vec![0.801, 0.757, 0.641, 0.532, 0.445, 0.402, 2.24, 5.44, 6.78, 6.87, 6.51, 6.29, 6.29, 6.94, 7.52, 7.7, 7.86, 7.87, 7.96, 8.08, 8.37, 8.6, 8.24, 7.08, 6.51, 5.6, 4.43, 3.08, 1.87, 1.02, 0.667, 0.5, 0.42, 0.446, 0.447, 0.447, 0.332, 0.263, 0.327, 0.56, 0.754, 0.969, 1.19, 2.54]);
        shape_map.insert('o', vec![0.801, 0.748, 0.627, 0.516, 0.426, 0.474, 2.43, 4.52, 5.23, 4.63, 4.05, 3.59, 3.67, 3.8, 3.4, 2.79, 2.15, 1.61, 1.32, 1.3, 1.28, 0.83, 0.386, 0.458, 0.377, 0.372, 0.54, 0.872, 1.35, 2.3, 3.79, 5.67, 6.74, 7.44, 12.1, 14.8, 14.9, 12.2, 8.5, 4.67, 2.74, 1.26, 0.521, 0.419]);
        shape_map.insert('u', vec![0.801, 0.75, 0.622, 0.506, 0.416, 0.919, 4.43, 6.16, 6.89, 6.51, 6.15, 5.98, 6.47, 6.58, 6.37, 5.88, 4.95, 3.98, 3.36, 3.07, 3.05, 2.6, 1.54, 1.27, 0.861, 0.519, 0.357, 0.32, 0.427, 0.969, 1.82, 2.65, 3.42, 3.95, 4.11, 3.98, 6.59, 8.75, 5.74, 2.2, 1.41, 0.606, 0.375, 0.376]);
        shape_map.insert('y', vec![0.801, 0.751, 0.635, 0.528, 0.439, 0.385, 1.59, 4.02, 4.81, 5.01, 4.49, 4.12, 3.95, 4.45, 5.02, 5.36, 5.58, 5.81, 6.14, 6.43, 5.86, 5.05, 4.76, 4.02, 3.16, 2.29, 1.38, 0.711, 0.473, 0.422, 0.449, 0.604, 0.724, 0.806, 0.766, 0.801, 0.988, 1.23, 1.41, 1.68, 1.46, 0.762, 0.388, 0.365]);
        shape_map.insert('E', vec![0.801, 0.754, 0.647, 0.546, 0.459, 0.388, 0.714, 2.8, 4.27, 4.86, 4.16, 3.49, 2.87, 2.69, 3.09, 3.24, 3.35, 3.56, 4.02, 4.76, 5.27, 4.68, 4.44, 4.27, 3.91, 3.53, 3.07, 2.53, 2.19, 2.22, 2.45, 2.66, 2.74, 2.84, 2.8, 2.69, 2.37, 2.17, 2.07, 1.94, 1.81, 2.0, 2.22, 2.98]);
        // shape_map.insert('E:', vec![0.801, 0.757, 0.653, 0.553, 0.467, 0.397, 0.611, 2.72, 4.62, 5.31, 4.54, 3.62, 2.74, 2.61, 2.77, 2.72, 2.74, 2.92, 3.36, 3.74, 3.21, 2.87, 2.88, 2.67, 2.43, 2.19, 1.91, 1.53, 1.29, 1.36, 1.54, 1.67, 1.74, 1.86, 1.87, 1.82, 1.66, 1.65, 1.75, 1.84, 2.01, 2.3, 2.24, 2.84]);
        shape_map.insert('I', vec![0.801, 0.756, 0.644, 0.538, 0.45, 0.383, 1.4, 4.27, 5.23, 5.89, 5.5, 5.2, 4.99, 5.19, 5.89, 6.16, 6.3, 6.41, 6.54, 6.84, 7.26, 7.96, 8.18, 7.37, 6.98, 6.38, 5.3, 4.01, 2.7, 1.88, 1.71, 1.78, 1.84, 1.86, 1.88, 1.78, 1.56, 1.24, 1.03, 0.917, 0.778, 0.764, 1.65, 2.33]);
        // shape_map.insert('O', vec![0.801, 0.745, 0.631, 0.526, 0.438, 0.371, 1.13, 3.07, 3.78, 3.57, 2.51, 1.69, 1.46, 1.58, 1.54, 1.42, 1.16, 0.942, 0.872, 0.998, 1.24, 1.22, 0.719, 0.824, 0.911, 1.08, 1.44, 2.11, 2.95, 4.09, 5.54, 6.85, 7.91, 8.61, 8.94, 8.55, 7.96, 6.91, 5.78, 4.89, 3.12, 1.98, 1.27, 1.09]);
        shape_map.insert('U', vec![0.801, 0.741, 0.619, 0.511, 0.421, 0.41, 1.8, 3.33, 3.7, 3.56, 2.97, 2.57, 2.69, 3.34, 3.56, 3.37, 2.79, 2.23, 1.9, 1.86, 1.83, 1.21, 0.675, 0.594, 0.404, 0.321, 0.383, 0.578, 0.942, 1.76, 2.83, 3.69, 4.35, 4.75, 4.76, 4.6, 4.79, 4.92, 6.31, 4.58, 2.3, 1.11, 0.537, 0.488]);
        shape_map.insert('Y', vec![0.801, 0.749, 0.626, 0.515, 0.424, 0.494, 2.6, 4.58, 5.28, 4.96, 4.49, 4.08, 4.15, 4.46, 4.51, 4.41, 4.31, 4.28, 4.4, 4.69, 5.21, 5.89, 6.01, 5.35, 5.41, 5.11, 4.78, 4.31, 3.81, 3.96, 4.56, 5.04, 5.34, 5.45, 5.18, 4.65, 4.24, 3.68, 2.93, 2.59, 2.09, 1.29, 0.813, 0.913]);
        shape_map.insert('2', vec![0.801, 0.741, 0.623, 0.516, 0.426, 0.378, 1.45, 3.11, 3.28, 3.54, 2.98, 2.64, 2.64, 3.71, 4.29, 4.95, 5.43, 5.84, 6.31, 6.78, 6.5, 5.35, 4.83, 4.07, 3.12, 2.24, 1.46, 0.891, 0.72, 0.755, 0.817, 0.96, 1.09, 1.16, 1.07, 0.958, 0.968, 1.13, 1.32, 2.22, 1.87, 0.826, 0.506, 0.509]);
        shape_map.insert('6', vec![0.801, 0.748, 0.638, 0.537, 0.45, 0.377, 0.773, 2.66, 3.68, 3.89, 2.85, 1.91, 1.42, 1.61, 1.62, 1.72, 1.9, 2.15, 2.46, 2.81, 3.25, 3.38, 2.59, 2.41, 2.33, 2.22, 2.23, 2.46, 2.72, 3.1, 3.82, 4.65, 5.23, 5.57, 5.74, 5.61, 5.12, 4.61, 4.08, 3.71, 3.16, 2.7, 2.21, 3.17]);
        shape_map.insert('9', vec![0.801, 0.746, 0.633, 0.529, 0.441, 0.371, 0.988, 2.93, 3.63, 3.8, 2.94, 2.27, 1.8, 2.17, 2.39, 2.55, 2.7, 3.02, 3.59, 4.26, 4.98, 5.15, 4.35, 4.22, 3.97, 3.62, 3.42, 3.19, 3.05, 3.35, 4.01, 4.53, 4.82, 5.0, 4.93, 4.52, 3.97, 3.5, 3.07, 2.74, 2.73, 1.68, 1.25, 1.14]);
        shape_map.insert('&', vec![0.801, 0.755, 0.641, 0.533, 0.445, 0.384, 1.62, 4.43, 5.42, 5.69, 5.12, 4.55, 4.12, 4.22, 4.22, 4.04, 3.8, 3.65, 3.64, 3.8, 4.18, 4.71, 4.75, 3.98, 3.83, 3.53, 2.97, 2.56, 2.18, 1.87, 1.95, 2.44, 2.97, 3.28, 3.51, 3.47, 3.19, 2.66, 2.2, 1.81, 1.29, 0.899, 1.67, 2.5]);

        let mut nasal_vowels = HashSet::new();
        nasal_vowels.insert('m');
        nasal_vowels.insert('n');
        nasal_vowels.insert('N');
        Self { shape_map: shape_map, nasal_vowels: nasal_vowels }
    }

    pub fn get_vowel_shape(&self, vowel: char) -> Option<&Vec<f32>> {
        self.shape_map.get(&vowel)
    }

    pub fn get_nasal_coupling(&self, vowel: char) -> f32 {
        if self.nasal_vowels.contains(&vowel) {
            return 0.5;
        }
        0.0
    }
}