use std::collections::{HashMap, HashSet};

pub struct Phonemes {
    shape_map: HashMap<char, Vec<f32>>,
    nasal_vowels: HashSet<char>
}

impl Phonemes {
    pub fn new() -> Self {
        let mut shape_map = HashMap::new();
        shape_map.insert('&', vec![0.801, 0.755, 0.641, 0.533, 0.445, 0.384, 1.62, 4.43, 5.42, 5.69, 5.12, 4.55, 4.25, 4.61, 4.86, 4.91, 4.85, 4.85, 4.97, 5.31, 5.98, 6.91, 7.13, 5.83, 5.48, 4.93, 4.05, 3.4, 2.78, 2.26, 2.24, 2.67, 3.06, 3.28, 3.51, 3.47, 3.19, 2.66, 2.18, 1.73, 1.18, 0.788, 1.4, 2.0]);
        shape_map.insert('2', vec![0.801, 0.741, 0.623, 0.516, 0.426, 0.378, 1.45, 3.11, 3.28, 3.54, 2.98, 2.64, 2.72, 4.05, 4.94, 6.01, 6.92, 7.76, 8.61, 9.47, 9.31, 7.84, 7.25, 5.96, 4.47, 3.13, 1.99, 1.18, 0.917, 0.916, 0.941, 1.05, 1.12, 1.16, 1.07, 0.958, 0.968, 1.13, 1.31, 2.11, 1.71, 0.724, 0.424, 0.407]);
        shape_map.insert('3', vec![0.41, 0.404, 0.399, 0.353, 0.215, 0.338, 1.08, 1.61, 1.42, 1.23, 1.12, 0.906, 0.891, 1.18, 1.45, 1.63, 1.85, 2.07, 2.21, 2.49, 2.91, 3.08, 3.55, 4.18, 4.42, 4.42, 4.1, 3.7, 3.35, 2.99, 2.71, 2.32, 1.7, 1.06, 0.614, 0.455, 0.701, 1.52, 2.69, 3.35, 3.38, 2.99, 2.28, 1.41]);
        shape_map.insert('6', vec![0.801, 0.748, 0.638, 0.537, 0.45, 0.377, 0.773, 2.66, 3.68, 3.89, 2.85, 1.91, 1.46, 1.76, 1.87, 2.08, 2.42, 2.86, 3.35, 3.92, 4.65, 4.96, 3.89, 3.53, 3.34, 3.11, 3.05, 3.26, 3.47, 3.77, 4.4, 5.08, 5.39, 5.57, 5.74, 5.61, 5.12, 4.61, 4.04, 3.53, 2.89, 2.36, 1.85, 2.53]);
        shape_map.insert('9', vec![0.801, 0.746, 0.633, 0.529, 0.441, 0.371, 0.988, 2.93, 3.63, 3.8, 2.94, 2.27, 1.85, 2.37, 2.75, 3.1, 3.43, 4.01, 4.89, 5.94, 7.13, 7.55, 6.53, 6.19, 5.68, 5.05, 4.66, 4.24, 3.89, 4.07, 4.62, 4.95, 4.97, 5.0, 4.93, 4.52, 3.97, 3.5, 3.05, 2.61, 2.49, 1.48, 1.05, 0.912]);
        shape_map.insert('A', vec![0.45, 0.333, 0.235, 0.24, 0.271, 0.317, 0.322, 0.706, 1.11, 1.01, 0.757, 0.522, 0.343, 0.302, 0.301, 0.341, 0.398, 0.387, 0.474, 0.758, 1.36, 1.69, 2.05, 2.78, 3.41, 3.82, 3.93, 4.0, 4.41, 5.18, 5.71, 6.2, 6.63, 6.57, 6.43, 6.25, 5.74, 5.11, 4.34, 3.9, 3.92, 3.82, 3.84, 3.98]);
        shape_map.insert('E', vec![0.505, 0.464, 0.399, 0.349, 0.289, 0.342, 0.72, 1.97, 2.75, 2.98, 2.51, 2.12, 1.95, 2.22, 2.82, 3.27, 3.71, 4.19, 4.74, 5.44, 5.91, 5.56, 5.5, 5.08, 4.49, 3.98, 3.45, 2.93, 2.57, 2.43, 2.36, 2.25, 2.13, 2.13, 2.23, 2.32, 2.32, 2.35, 2.26, 2.04, 1.91, 2.01, 1.96, 1.97]);
        shape_map.insert('I', vec![0.801, 0.756, 0.644, 0.538, 0.45, 0.383, 1.4, 4.27, 5.23, 5.89, 5.5, 5.2, 5.14, 5.66, 6.79, 7.47, 8.03, 8.51, 8.91, 9.55, 10.4, 11.7, 12.3, 10.8, 10.0, 8.92, 7.22, 5.33, 3.44, 2.28, 1.97, 1.94, 1.9, 1.86, 1.88, 1.78, 1.56, 1.24, 1.02, 0.873, 0.712, 0.67, 1.38, 1.87]);
        shape_map.insert('N', vec![0.51, 0.501, 0.471, 0.384, 0.399, 0.588, 0.767, 0.916, 1.22, 1.31, 1.01, 0.783, 0.796, 0.938, 0.843, 0.857, 1.18, 1.13, 1.02, 1.27, 1.28, 1.02, 0.798, 0.675, 0.666, 0.629, 0.363, 0.0748, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.12, 3.53, 5.92, 7.9, 8.79, 7.78, 5.67, 3.64, 2.31, 1.47]);
        shape_map.insert('O', vec![0.61, 0.455, 0.24, 0.148, 0.087, 0.189, 0.246, 0.67, 1.3, 1.35, 0.972, 0.614, 0.496, 0.609, 0.725, 0.552, 0.489, 0.598, 0.683, 0.808, 1.0, 1.06, 0.944, 1.14, 2.17, 3.23, 3.42, 3.42, 3.85, 4.74, 5.38, 5.6, 5.96, 6.73, 7.11, 6.66, 6.19, 5.59, 4.73, 3.3, 2.03, 1.42, 1.08, 0.847]);
        shape_map.insert('U', vec![0.801, 0.741, 0.619, 0.511, 0.421, 0.41, 1.8, 3.33, 3.7, 3.56, 2.97, 2.57, 2.77, 3.64, 4.1, 4.09, 3.56, 2.96, 2.59, 2.59, 2.62, 1.78, 1.01, 0.87, 0.579, 0.449, 0.522, 0.769, 1.2, 2.13, 3.26, 4.02, 4.48, 4.75, 4.76, 4.6, 4.79, 4.92, 6.25, 4.36, 2.1, 0.969, 0.45, 0.391]);
        shape_map.insert('V', vec![0.33, 0.312, 0.261, 0.194, 0.164, 0.256, 0.368, 0.721, 1.15, 1.21, 1.0, 0.808, 0.749, 0.815, 0.896, 0.857, 1.13, 1.35, 1.39, 1.54, 1.57, 1.69, 1.96, 2.2, 2.52, 2.9, 3.23, 3.47, 3.77, 4.31, 4.78, 4.95, 5.01, 5.38, 5.82, 5.78, 5.63, 5.21, 4.66, 3.76, 2.81, 2.2, 1.75, 1.29]);
        shape_map.insert('Y', vec![0.801, 0.749, 0.626, 0.515, 0.424, 0.494, 2.6, 4.58, 5.28, 4.96, 4.49, 4.08, 4.28, 4.87, 5.2, 5.36, 5.5, 5.69, 5.99, 6.55, 7.46, 8.63, 9.02, 7.85, 7.75, 7.14, 6.52, 5.73, 4.85, 4.81, 5.26, 5.5, 5.51, 5.45, 5.18, 4.65, 4.24, 3.68, 2.91, 2.47, 1.91, 1.13, 0.681, 0.73]);
        shape_map.insert('a', vec![0.801, 0.751, 0.645, 0.546, 0.46, 0.389, 0.576, 2.27, 3.74, 3.79, 2.22, 0.986, 0.549, 0.558, 0.698, 0.976, 1.35, 1.93, 2.67, 3.57, 3.69, 2.76, 2.93, 2.81, 2.72, 2.86, 3.31, 3.68, 4.06, 4.74, 5.4, 5.74, 5.76, 5.8, 5.79, 5.45, 5.16, 4.8, 4.31, 3.59, 3.11, 1.74, 2.05, 2.31]);
        shape_map.insert('e', vec![0.801, 0.759, 0.654, 0.553, 0.466, 0.397, 0.726, 3.28, 5.06, 5.59, 5.77, 5.29, 4.93, 4.93, 5.5, 6.18, 6.59, 6.9, 7.31, 7.56, 6.53, 5.52, 5.06, 4.15, 3.3, 2.66, 2.12, 1.53, 1.1, 0.905, 0.792, 0.697, 0.654, 0.704, 0.697, 0.672, 0.495, 0.462, 0.568, 0.813, 0.974, 1.26, 1.18, 2.01]);
        shape_map.insert('i', vec![0.448, 0.432, 0.416, 0.405, 0.49, 0.54, 1.14, 2.66, 3.46, 3.47, 3.58, 3.84, 4.15, 4.5, 5.09, 5.68, 6.04, 6.38, 6.59, 6.51, 6.13, 5.64, 4.98, 3.86, 2.9, 2.34, 1.86, 1.31, 0.833, 0.58, 0.43, 0.305, 0.259, 0.304, 0.345, 0.375, 0.367, 0.367, 0.42, 0.659, 1.1, 1.55, 1.59, 1.6]);
        shape_map.insert('l', vec![0.55, 0.608, 0.759, 1.46, 2.61, 3.4, 3.54, 3.37, 3.18, 2.97, 3.11, 3.55, 3.85, 3.7, 3.21, 2.99, 3.09, 3.13, 3.09, 3.24, 3.33, 3.44, 3.65, 3.66, 3.66, 3.72, 3.78, 4.13, 4.67, 5.26, 5.91, 6.43, 6.64, 6.76, 6.93, 6.57, 5.44, 3.94, 2.1, 0.856, 1.97, 3.75, 4.07, 3.41]);
        shape_map.insert('m', vec![0.57, 0.583, 0.399, 0.404, 1.41, 2.73, 3.13, 2.99, 3.37, 4.05, 3.98, 3.66, 3.46, 3.43, 3.79, 3.62, 3.47, 3.75, 3.67, 3.87, 4.58, 4.2, 3.71, 3.55, 2.94, 2.73, 2.59, 2.15, 2.06, 2.37, 2.59, 2.88, 3.35, 3.97, 4.63, 4.81, 4.44, 3.94, 3.28, 2.08, 0.8, 0.13, 0.0, 0.0]);
        shape_map.insert('n', vec![0.26, 0.256, 0.21, 0.194, 0.184, 0.261, 0.885, 1.55, 1.54, 1.15, 0.824, 0.839, 1.23, 1.94, 2.47, 2.58, 2.74, 3.07, 3.4, 3.86, 3.79, 3.17, 2.84, 2.05, 1.35, 1.51, 1.76, 1.77, 1.59, 1.19, 0.654, 0.274, 0.195, 0.22, 0.107, 0.0, 0.0, 0.0, 0.0, 0.0, 0.744, 1.43, 1.41, 1.17]);
        shape_map.insert('o', vec![0.801, 0.748, 0.627, 0.516, 0.426, 0.474, 2.43, 4.52, 5.23, 4.63, 4.05, 3.59, 3.78, 4.15, 3.92, 3.39, 2.74, 2.13, 1.8, 1.81, 1.83, 1.22, 0.579, 0.671, 0.54, 0.52, 0.737, 1.16, 1.72, 2.79, 4.37, 6.18, 6.94, 7.44, 12.1, 14.8, 14.9, 12.2, 8.42, 4.44, 2.5, 1.11, 0.437, 0.335]);
        shape_map.insert('u', vec![0.801, 0.75, 0.622, 0.506, 0.416, 0.919, 4.43, 6.16, 6.89, 6.51, 6.15, 5.98, 6.67, 7.19, 7.34, 7.14, 6.31, 5.29, 4.58, 4.29, 4.36, 3.81, 2.32, 1.86, 1.23, 0.726, 0.487, 0.425, 0.545, 1.18, 2.1, 2.89, 3.52, 3.95, 4.11, 3.98, 6.59, 8.75, 5.69, 2.09, 1.29, 0.531, 0.314, 0.301]);
        shape_map.insert('y', vec![0.801, 0.751, 0.635, 0.528, 0.439, 0.385, 1.59, 4.02, 4.81, 5.01, 4.49, 4.12, 4.07, 4.85, 5.79, 6.5, 7.11, 7.73, 8.37, 8.99, 8.39, 7.41, 7.14, 5.9, 4.52, 3.2, 1.88, 0.945, 0.603, 0.512, 0.517, 0.66, 0.746, 0.806, 0.766, 0.801, 0.988, 1.23, 1.4, 1.6, 1.33, 0.667, 0.325, 0.292]);
        shape_map.insert('{', vec![0.22, 0.246, 0.265, 0.22, 0.158, 0.169, 0.445, 0.999, 1.37, 1.3, 1.01, 0.954, 1.47, 2.23, 2.54, 2.53, 2.84, 3.57, 4.37, 5.04, 5.51, 5.62, 5.8, 5.66, 5.07, 4.65, 4.56, 4.42, 4.2, 4.0, 3.87, 3.88, 3.91, 3.95, 4.13, 4.41, 4.66, 4.76, 4.61, 4.28, 4.06, 3.94, 3.79, 3.38]);

        let mut nasal_vowels = HashSet::new();
        nasal_vowels.insert('m');
        nasal_vowels.insert('n');
        nasal_vowels.insert('N');
        Self { shape_map: shape_map, nasal_vowels: nasal_vowels }
    }

    pub fn get_vowel_shape(&self, vowel: char) -> Option<&Vec<f32>> {
        self.shape_map.get(&vowel)
    }

    pub fn get_nasal_coupling(&self, vowel: char) -> f32 {
        if self.nasal_vowels.contains(&vowel) {
            return 0.5;
        }
        0.0
    }
}